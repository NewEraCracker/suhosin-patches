diff -uNr suhosin-0.9.33/ex_imp.c suhosin-0.9.33.php53/ex_imp.c
--- suhosin-0.9.33/ex_imp.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php53/ex_imp.c	Tue Feb 11 17:01:00 2014
@@ -727,7 +727,7 @@
 
 /* {{{ suhosin_ex_imp_functions[]
  */
-function_entry suhosin_ex_imp_functions[] = {
+zend_function_entry suhosin_ex_imp_functions[] = {
 	PHP_NAMED_FE(extract, PHP_FN(suhosin_extract), suhosin_arginfo_extract)
 	PHP_NAMED_FE(import_request_variables, PHP_FN(suhosin_import_request_variables), suhosin_arginfo_import_request_variables)
 	{NULL, NULL, NULL}
diff -uNr suhosin-0.9.33/execute.c suhosin-0.9.33.php53/execute.c
--- suhosin-0.9.33/execute.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php53/execute.c	Tue Feb 11 17:01:00 2014
@@ -152,7 +152,7 @@
 			t = h = (h == NULL) ? h2 : ( (h2 == NULL) ? h : ( (h < h2) ? h : h2 ) );
 			if (h == NULL) break;
 							
-			while (t > s && (isalnum(t[-1]) || t[-1]=='_')) {
+			while (t > s && (isalnum(t[-1]) || t[-1]=='_' || t[-1]=='.')) {
 				t--;
 			}
 			
@@ -195,7 +195,7 @@
 			t = h = (h == NULL) ? h2 : ( (h2 == NULL) ? h : ( (h < h2) ? h : h2 ) );
 			if (h == NULL) break;
 							
-			while (t > s && (isalnum(t[-1]) || t[-1]=='_')) {
+			while (t > s && (isalnum(t[-1]) || t[-1]=='_' || t[-1]=='.')) {
 				t--;
 			}
 
@@ -626,12 +626,20 @@
 {
 	zval **regex,
 	     **replace,
-	     **subject,
-	     **limit;
+	     **subject;
 
+#ifndef PHP_ATLEAST_5_3
+	zval **limit;
 	if (ZEND_NUM_ARGS() < 3 || zend_get_parameters_ex(3, &regex, &replace, &subject, &limit) == FAILURE) {
 		return (0);
 	}
+#else
+	long limit = -1;
+	zval **zcount = NULL;
+	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "ZZZ|lZ", &regex, &replace, &subject, &limit, &zcount) == FAILURE) {
+		return (1);
+	}
+#endif
 		
 	if (Z_TYPE_PP(regex) == IS_ARRAY) {
 		zval	**regex_entry;
@@ -1072,35 +1080,34 @@
 #ifndef PHP_ATLEAST_5_3
 	zval **function_name;
 #endif
+	char *name;
+	int name_len;
 	zend_function *func;
 	char *lcname;
 	zend_bool retval;
-	int func_name_len;
 	
 #ifndef PHP_ATLEAST_5_3
 	if (ZEND_NUM_ARGS()!=1 || zend_get_parameters_ex(1, &function_name)==FAILURE) {
 		ZEND_WRONG_PARAM_COUNT_WITH_RETVAL(1);
 	}
 	convert_to_string_ex(function_name);
-	func_name_len = Z_STRLEN_PP(function_name);
-	lcname = estrndup(Z_STRVAL_PP(function_name), func_name_len);	
-	zend_str_tolower(lcname, func_name_len);
+	name = Z_STRVAL_PP(function_name);
+	name_len = Z_STRLEN_PP(function_name);
 #else
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "s", &lcname, &func_name_len) == FAILURE) {
-		return;
+	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "s", &name, &name_len) == FAILURE) {
+		return (1);
 	}
+#endif
+	lcname = zend_str_tolower_dup(name, name_len);
 
 	/* Ignore leading "\" */
-	if (lcname[0] == '\\') {
-		lcname = &lcname[1];
-		func_name_len--;
+	name = lcname;
+	if (name_len > 0 && lcname[0] == '\\') {
+		name = &lcname[1];
+		name_len--;
 	}
-	lcname = zend_str_tolower_dup(lcname, func_name_len);	
-#endif
 
-	retval = (zend_hash_find(EG(function_table), lcname, func_name_len+1, (void **)&func) == SUCCESS);
-	
-	efree(lcname);
+	retval = (zend_hash_find(EG(function_table), name, name_len+1, (void **)&func) == SUCCESS);
 
 	/*
 	 * A bit of a hack, but not a bad one: we see if the handler of the function
@@ -1114,26 +1121,28 @@
 	/* Now check if function is forbidden by Suhosin */
 	if (SUHOSIN_G(in_code_type) == SUHOSIN_EVAL) {
 		if (SUHOSIN_G(eval_whitelist) != NULL) {
-			if (!zend_hash_exists(SUHOSIN_G(eval_whitelist), lcname, func_name_len+1)) {
+			if (!zend_hash_exists(SUHOSIN_G(eval_whitelist), name, name_len+1)) {
 			    retval = 0;
 			}
 		} else if (SUHOSIN_G(eval_blacklist) != NULL) {
-			if (zend_hash_exists(SUHOSIN_G(eval_blacklist), lcname, func_name_len+1)) {
+			if (zend_hash_exists(SUHOSIN_G(eval_blacklist), name, name_len+1)) {
 			    retval = 0;
 			}
 		}
 	}
 	
 	if (SUHOSIN_G(func_whitelist) != NULL) {
-		if (!zend_hash_exists(SUHOSIN_G(func_whitelist), lcname, func_name_len+1)) {
+		if (!zend_hash_exists(SUHOSIN_G(func_whitelist), name, name_len+1)) {
 		    retval = 0;
 		}
 	} else if (SUHOSIN_G(func_blacklist) != NULL) {
-		if (zend_hash_exists(SUHOSIN_G(func_blacklist), lcname, func_name_len+1)) {
+		if (zend_hash_exists(SUHOSIN_G(func_blacklist), name, name_len+1)) {
 		    retval = 0;
 		}
 	}
 
+	efree(lcname);
+
 	RETVAL_BOOL(retval);
 	return (1);
 }
@@ -1344,7 +1353,7 @@
 
     suhosin_SHA256Init(&context);
 	suhosin_SHA256Update(&context, (void *) seedbuf, sizeof(php_uint32) * 8);
-	suhosin_SHA256Final(seedbuf, &context);
+	suhosin_SHA256Final((void *)seedbuf, &context);
 }
 /* }}} */
 
@@ -1501,7 +1510,7 @@
 {
 #ifdef PHP_ATLEAST_5_3
 	if (zend_parse_parameters_none() == FAILURE) {
-		return;
+		return (1);
 	}
 #else
         int argc = ZEND_NUM_ARGS();
diff -uNr suhosin-0.9.33/ifilter.c suhosin-0.9.33.php53/ifilter.c
--- suhosin-0.9.33/ifilter.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php53/ifilter.c	Tue Feb 11 17:01:00 2014
@@ -146,7 +146,7 @@
 	if (zend_hash_find(arr, key, klen, (void **) &tzval) == SUCCESS &&
 			Z_TYPE_PP(tzval) == IS_STRING) {
 		
-		s = t = Z_STRVAL_PP(tzval);
+		s = t = (unsigned char *)Z_STRVAL_PP(tzval);
 		for (; *t; t++) {
 			if (suhosin_is_dangerous_char[*t]) {
 				*t = '?';
@@ -168,7 +168,7 @@
 	if (zend_hash_find(arr, key, klen, (void **) &tzval) == SUCCESS &&
 			Z_TYPE_PP(tzval) == IS_STRING) {
 		
-		temp = Z_STRVAL_PP(tzval);
+		temp = (unsigned char *)Z_STRVAL_PP(tzval);
 		
 		t = temp;
 		for (t = temp; *t; t++) {
@@ -195,7 +195,7 @@
 		}
 		*n = 0;
 		
-		Z_STRVAL_PP(tzval) = newv;
+		Z_STRVAL_PP(tzval) = (char *)newv;
 		Z_STRLEN_PP(tzval) = n-newv;
 	}
 }
diff -uNr suhosin-0.9.33/log.c suhosin-0.9.33.php53/log.c
--- suhosin-0.9.33/log.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php53/log.c	Tue Feb 11 17:01:00 2014
@@ -36,6 +36,12 @@
 #include <sys/socket.h>
 #endif
 
+#ifdef HAVE_SYS_TIME_H
+#include <sys/time.h>
+#elif defined(PHP_WIN32)
+#include "win32/time.h"
+#endif
+
 #if defined(PHP_WIN32) || defined(__riscos__) || defined(NETWARE)
 #undef AF_UNIX
 #endif
diff -uNr suhosin-0.9.33/memory_limit.c suhosin-0.9.33.php53/memory_limit.c
--- suhosin-0.9.33/memory_limit.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php53/memory_limit.c	Tue Feb 11 17:05:34 2014
@@ -34,8 +34,11 @@
  */
 static PHP_INI_MH(suhosin_OnChangeMemoryLimit)
 {
-	long hard_memory_limit = 1<<30;
-	
+#if SIZEOF_LONG==8
+	long hard_memory_limit = 0x7fffffffffffffff;
+#elif SIZEOF_LONG==4
+	long hard_memory_limit = 0x7fffffff;
+#endif /* will produce a compile error or SIZEOF_LONG is not 4 or 8 */
 	if (stage == ZEND_INI_STAGE_RUNTIME) {
 		if (SUHOSIN_G(memory_limit) > 0) {
 			SUHOSIN_G(hard_memory_limit) = SUHOSIN_G(memory_limit);
@@ -50,13 +53,13 @@
 		PG(memory_limit) = zend_atol(new_value, new_value_length);
 		if (hard_memory_limit > 0) {
 			if (PG(memory_limit) > hard_memory_limit) {
-				suhosin_log(S_MISC, "script tried to increase memory_limit to %u bytes which is above the allowed value", PG(memory_limit));
+				suhosin_log(S_MISC, "script tried to increase memory_limit to %lu bytes which is above the allowed value", PG(memory_limit));
 				if (!SUHOSIN_G(simulation)) {
 					PG(memory_limit) = hard_memory_limit;
 					return FAILURE;
 				}
 			} else if (PG(memory_limit) < 0) {
-				suhosin_log(S_MISC, "script tried to disable memory_limit by setting it to a negative value %d bytes which is not allowed", PG(memory_limit));
+				suhosin_log(S_MISC, "script tried to disable memory_limit by setting it to a negative value %ld bytes which is not allowed", PG(memory_limit));
 				if (!SUHOSIN_G(simulation)) {
 					PG(memory_limit) = hard_memory_limit;
 					return FAILURE;
diff -uNr suhosin-0.9.33/php_suhosin.h suhosin-0.9.33.php53/php_suhosin.h
--- suhosin-0.9.33/php_suhosin.h	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php53/php_suhosin.h	Tue Feb 11 17:01:00 2014
@@ -308,7 +308,7 @@
 char *suhosin_cookie_decryptor(TSRMLS_D);
 char *suhosin_getenv(char *name, size_t name_len TSRMLS_DC);
 void suhosin_hook_post_handlers(TSRMLS_D);
-void suhosin_unhook_post_handlers();
+void suhosin_unhook_post_handlers(TSRMLS_D);
 void suhosin_hook_register_server_variables();
 void suhosin_hook_header_handler();
 void suhosin_unhook_header_handler();
diff -uNr suhosin-0.9.33/post_handler.c suhosin-0.9.33.php53/post_handler.c
--- suhosin-0.9.33/post_handler.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php53/post_handler.c	Tue Feb 11 17:14:04 2014
@@ -40,7 +40,9 @@
 {
     char *var, *val, *e, *s, *p;
     zval *array_ptr = (zval *) arg;
-
+#if PHP_VERSION_ID >= 50311	
+	long count = 0;
+#endif
     if (SG(request_info).post_data==NULL) {
         return;
     }	
@@ -52,6 +54,13 @@
 last_value:
         if ((val = memchr(s, '=', (p - s)))) { /* have a value */
             unsigned int val_len, new_val_len;
+
+#if PHP_VERSION_ID >= 50311	
+			if (++count > PG(max_input_vars)) {
+				php_error_docref(NULL TSRMLS_CC, E_WARNING, "Input variables exceeded %ld. To increase the limit change max_input_vars in php.ini.", PG(max_input_vars));
+				return;
+			}
+#endif
             var = s;
 
             php_url_decode(var, (val - s));
@@ -148,10 +157,10 @@
 
 	/* we need to tell suhosin patch that there is a new valid destructor */
 	/* therefore we have create HashTable that has this destructor */
-	zend_hash_init(&tempht, 0, NULL, suhosin_post_handler_modification, 0);
+	zend_hash_init(&tempht, 0, NULL, (dtor_func_t)suhosin_post_handler_modification, 0);
 	zend_hash_destroy(&tempht);
 	/* And now we can overwrite the destructor for post entries */
-	SG(known_post_content_types).pDestructor = suhosin_post_handler_modification;
+	SG(known_post_content_types).pDestructor = (dtor_func_t)suhosin_post_handler_modification;
 	
 	/* we have to stop mbstring from replacing our post handler */
 	if (zend_hash_find(EG(ini_directives), "mbstring.encoding_translation", sizeof("mbstring.encoding_translation"), (void **) &ini_entry) == FAILURE) {
@@ -162,7 +171,7 @@
 	ini_entry->on_modify = suhosin_OnUpdate_mbstring_encoding_translation;
 }
 
-void suhosin_unhook_post_handlers()
+void suhosin_unhook_post_handlers(TSRMLS_D)
 {
 	zend_ini_entry *ini_entry;
 
@@ -186,5 +195,3 @@
  * vim600: noet sw=4 ts=4 fdm=marker
  * vim<600: noet sw=4 ts=4
  */
-
-
diff -uNr suhosin-0.9.33/rfc1867.c suhosin-0.9.33.php53/rfc1867.c
--- suhosin-0.9.33/rfc1867.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php53/rfc1867.c	Tue Feb 11 17:01:00 2014
@@ -825,7 +825,7 @@
 		}
 	} else {
 		/* search for the end of the boundary */
-		boundary_end = strchr(boundary, ',');
+		boundary_end = strpbrk(boundary, ",;");
 	}
 	if (boundary_end) {
 		boundary_end[0] = '\0';
@@ -1032,6 +1032,10 @@
 					}
 					tmp++;				
 				}
+				/* Brackets should always be closed */
+				if(c != 0) {
+					skip_upload = 1;
+				}
 			}
 
 			total_bytes = cancel_upload = 0;
@@ -1226,11 +1230,12 @@
 			}
 #ifdef PHP_WIN32
 			if (PG(magic_quotes_gpc)) {
-				s = s ? s : filename;
-				tmp = strrchr(s, '\'');
-				s = tmp > s ? tmp : s;
-				tmp = strrchr(s, '"');
-				s = tmp > s ? tmp : s;
+				if ((tmp = strrchr(s ? s : filename, '\'')) > s) {
+					s = tmp;
+				}
+				if ((tmp = strrchr(s ? s : filename, '"')) > s) {
+					s = tmp;
+				}
 			}
 #endif
 
@@ -1239,7 +1244,7 @@
 #endif
 			
 			if (!is_anonymous) {
-				if (s && s > filename) {
+				if (s && s >= filename) {
 					safe_php_register_variable(lbuf, s+1, NULL, 0 TSRMLS_CC);
 				} else {
 					safe_php_register_variable(lbuf, filename, NULL, 0 TSRMLS_CC);
@@ -1252,7 +1257,7 @@
 			} else {
 				sprintf(lbuf, "%s[name]", param);
 			}
-			if (s && s > filename) {
+			if (s && s >= filename) {
 				register_http_post_files_variable(lbuf, s+1, http_post_files, 0 TSRMLS_CC);
 			} else {
 				register_http_post_files_variable(lbuf, filename, http_post_files, 0 TSRMLS_CC);
diff -uNr suhosin-0.9.33/session.c suhosin-0.9.33.php53/session.c
--- suhosin-0.9.33/session.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php53/session.c	Tue Feb 11 17:01:01 2014
@@ -426,7 +426,7 @@
     }
     
     /* store ip value */
-    suhosin_get_ipv4(crypted+4 TSRMLS_CC);
+    suhosin_get_ipv4((char *)crypted+4 TSRMLS_CC);
     
     /* store check value */
     crypted[8] = check & 0xff;
@@ -544,7 +544,7 @@
         if (check_ra > 4) {
             check_ra = 4;
         }
-        suhosin_get_ipv4(&buf TSRMLS_CC);
+        suhosin_get_ipv4(&buf[0] TSRMLS_CC);
         if (memcmp(buf, decrypted+4, check_ra) != 0) {
             goto error_out;
         }
@@ -869,7 +869,7 @@
 
     /* increase session identifier entropy */
     if (SESSION_G(entropy_length) == 0 || SESSION_G(entropy_file) == NULL) {
-        
+#ifndef PHP_WIN32
         /* ensure that /dev/urandom exists */
         int fd = VCWD_OPEN("/dev/urandom", O_RDONLY);
         if (fd >= 0) {
@@ -877,6 +877,7 @@
             SESSION_G(entropy_length) = 16;
             SESSION_G(entropy_file) = pestrdup("/dev/urandom", 1);
         }
+#endif
     }
 }
 
diff -uNr suhosin-0.9.33/sha256.c suhosin-0.9.33.php53/sha256.c
--- suhosin-0.9.33/sha256.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php53/sha256.c	Tue Feb 11 17:01:01 2014
@@ -392,7 +392,7 @@
 
 /* {{{ suhosin_sha256_functions[]
  */
-static function_entry suhosin_sha256_functions[] = {
+static zend_function_entry suhosin_sha256_functions[] = {
 	PHP_NAMED_FE(sha256, PHP_FN(suhosin_sha256), NULL)
 	PHP_NAMED_FE(sha256_file, PHP_FN(suhosin_sha256_file), NULL)
 	{NULL, NULL, NULL}
diff -uNr suhosin-0.9.33/suhosin.c suhosin-0.9.33.php53/suhosin.c
--- suhosin-0.9.33/suhosin.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php53/suhosin.c	Tue Feb 11 17:01:01 2014
@@ -189,9 +189,11 @@
 
 static void suhosin_shutdown(zend_extension *extension)
 {
+	TSRMLS_FETCH();
+
 	suhosin_unhook_execute();
 	suhosin_unhook_header_handler();
-	suhosin_unhook_post_handlers();
+	suhosin_unhook_post_handlers(TSRMLS_C);
     
     if (ze != NULL) {
 	    ze->startup = orig_module_startup;
