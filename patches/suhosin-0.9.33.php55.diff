diff -uNr suhosin-0.9.33/ex_imp.c suhosin-0.9.33.php55/ex_imp.c
--- suhosin-0.9.33/ex_imp.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php55/ex_imp.c	Fri Feb 14 18:17:06 2014
@@ -3,7 +3,7 @@
   | Suhosin Version 1                                                    |
   +----------------------------------------------------------------------+
   | Copyright (c) 2006-2007 The Hardened-PHP Project                     |
-  | Copyright (c) 2007-2012 SektionEins GmbH                             |
+  | Copyright (c) 2007-2014 SektionEins GmbH                             |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
@@ -463,7 +463,7 @@
 	}
 
 	if (hash_key->nKeyLength) {
-		php_prefix_varname(&new_key, prefix, hash_key->arKey, hash_key->nKeyLength - 1, 0 TSRMLS_CC);
+		php_prefix_varname(&new_key, prefix, (char *)hash_key->arKey, hash_key->nKeyLength - 1, 0 TSRMLS_CC);
 	} else {
 		zval num;
 
@@ -550,7 +550,7 @@
 	}
 
 	if (php_varname_check(new_key, new_key_len-1, 0 TSRMLS_CC) == FAILURE) {
-		zval_dtor(&new_key);
+		efree(new_key);
 		return 0;
 	}
 
@@ -727,7 +727,7 @@
 
 /* {{{ suhosin_ex_imp_functions[]
  */
-function_entry suhosin_ex_imp_functions[] = {
+zend_function_entry suhosin_ex_imp_functions[] = {
 	PHP_NAMED_FE(extract, PHP_FN(suhosin_extract), suhosin_arginfo_extract)
 	PHP_NAMED_FE(import_request_variables, PHP_FN(suhosin_import_request_variables), suhosin_arginfo_import_request_variables)
 	{NULL, NULL, NULL}
diff -uNr suhosin-0.9.33/execute.c suhosin-0.9.33.php55/execute.c
--- suhosin-0.9.33/execute.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php55/execute.c	Fri Feb 14 18:17:06 2014
@@ -3,7 +3,7 @@
   | Suhosin Version 1                                                    |
   +----------------------------------------------------------------------+
   | Copyright (c) 2006-2007 The Hardened-PHP Project                     |
-  | Copyright (c) 2007-2012 SektionEins GmbH                             |
+  | Copyright (c) 2007-2014 SektionEins GmbH                             |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
@@ -38,18 +38,24 @@
 
 #include "sha256.h"
 
-
+#if PHP_MAJOR_VERSION > 5 || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 5)
+static void (*old_execute_ex)(zend_execute_data *execute_data TSRMLS_DC);
+static void suhosin_execute_ex(zend_execute_data *execute_data TSRMLS_DC);
+#else
 static void (*old_execute)(zend_op_array *op_array TSRMLS_DC);
 static void suhosin_execute(zend_op_array *op_array TSRMLS_DC);
 static void (*old_execute_ZO)(zend_op_array *op_array, long dummy TSRMLS_DC);
 static void suhosin_execute_ZO(zend_op_array *op_array, long dummy TSRMLS_DC);
 static void *(*zo_set_oe_ex)(void *ptr) = NULL;
+#endif
 
-/*STATIC zend_op_array* (*old_compile_file)(zend_file_handle* file_handle, int type TSRMLS_DC);
-  STATIC zend_op_array* suhosin_compile_file(zend_file_handle*, int TSRMLS_DC);*/
-
+#if PHP_MAJOR_VERSION > 5 || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 5)
+static void suhosin_execute_internal(zend_execute_data *execute_data_ptr, zend_fcall_info *fci, int return_value_used TSRMLS_DC);
+static void (*old_execute_internal)(zend_execute_data *execute_data_ptr, zend_fcall_info *fci, int return_value_used TSRMLS_DC);
+#else
 static void suhosin_execute_internal(zend_execute_data *execute_data_ptr, int return_value_used TSRMLS_DC);
 static void (*old_execute_internal)(zend_execute_data *execute_data_ptr, int return_value_used TSRMLS_DC);
+#endif
 
 extern zend_extension suhosin_zend_extension_entry;
 
@@ -152,7 +158,7 @@
 			t = h = (h == NULL) ? h2 : ( (h2 == NULL) ? h : ( (h < h2) ? h : h2 ) );
 			if (h == NULL) break;
 							
-			while (t > s && (isalnum(t[-1]) || t[-1]=='_')) {
+			while (t > s && (isalnum(t[-1]) || t[-1]=='_' || t[-1]=='.')) {
 				t--;
 			}
 			
@@ -195,7 +201,7 @@
 			t = h = (h == NULL) ? h2 : ( (h2 == NULL) ? h : ( (h < h2) ? h : h2 ) );
 			if (h == NULL) break;
 							
-			while (t > s && (isalnum(t[-1]) || t[-1]=='_')) {
+			while (t > s && (isalnum(t[-1]) || t[-1]=='_' || t[-1]=='.')) {
 				t--;
 			}
 
@@ -306,7 +312,7 @@
 	char *s;
 	int r;
 
-	s = op_array->filename;
+	s = (char *)op_array->filename;
 	
 	/* eval, assert, create_function, preg_replace  */
 	if (op_array->type == ZEND_EVAL_CODE) {
@@ -335,6 +341,18 @@
 			return SUHOSIN_CODE_TYPE_COMMANDLINE;
 		}
 		
+		if (strstr(s, "Command line begin code") != NULL) {
+			return SUHOSIN_CODE_TYPE_COMMANDLINE;
+		}
+
+		if (strstr(s, "Command line run code") != NULL) {
+			return SUHOSIN_CODE_TYPE_COMMANDLINE;
+		}
+
+		if (strstr(s, "Command line end code") != NULL) {
+			return SUHOSIN_CODE_TYPE_COMMANDLINE;
+		}
+
 		if (strstr(s, "suhosin internal code") != NULL) {
 			return SUHOSIN_CODE_TYPE_SUHOSIN;
 		}
@@ -353,10 +371,16 @@
 	return SUHOSIN_CODE_TYPE_UNKNOWN;
 }
 
-/* {{{ void suhosin_execute_ex(zend_op_array *op_array TSRMLS_DC)
+/* {{{ void suhosin_execute_ex
  *    This function provides a hook for execution */
+#if PHP_MAJOR_VERSION > 5 || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 5)
+static void suhosin_execute_ex(zend_execute_data *execute_data TSRMLS_DC)
+{
+	zend_op_array *op_array = execute_data->op_array;
+#else
 static void suhosin_execute_ex(zend_op_array *op_array, int zo, long dummy TSRMLS_DC)
 {
+#endif
 	zend_op_array *new_op_array;
 	int op_array_type, len;
 	char *fn;
@@ -453,11 +477,11 @@
 	SUHOSIN_G(execution_depth)++;
 	
 	if (SUHOSIN_G(max_execution_depth) && SUHOSIN_G(execution_depth) > SUHOSIN_G(max_execution_depth)) {
-		suhosin_log(S_EXECUTOR, "maximum execution depth reached - script terminated");
+		suhosin_log(S_EXECUTOR|S_GETCALLER, "maximum execution depth reached - script terminated");
 		suhosin_bailout(TSRMLS_C);
 	}
 	
-	fn = op_array->filename;
+	fn = (char *)op_array->filename;
 	len = strlen(fn);
 	
 	orig_code_type = SUHOSIN_G(in_code_type);
@@ -500,7 +524,7 @@
 	switch (op_array_type) {
 	    case SUHOSIN_CODE_TYPE_EVAL:
 		    if (SUHOSIN_G(executor_disable_eval)) {
-			    suhosin_log(S_EXECUTOR, "use of eval is forbidden by configuration");
+			    suhosin_log(S_EXECUTOR|S_GETCALLER, "use of eval is forbidden by configuration");
 			    if (!SUHOSIN_G(simulation)) {
 				    zend_error(E_ERROR, "SUHOSIN - Use of eval is forbidden by configuration");
 			    }
@@ -509,7 +533,7 @@
 		    
 	    case SUHOSIN_CODE_TYPE_REGEXP:
 		    if (SUHOSIN_G(executor_disable_emod)) {
-			    suhosin_log(S_EXECUTOR, "use of preg_replace() with /e modifier is forbidden by configuration");
+			    suhosin_log(S_EXECUTOR|S_GETCALLER, "use of preg_replace() with /e modifier is forbidden by configuration");
 			    if (!SUHOSIN_G(simulation)) {
 				    zend_error(E_ERROR, "SUHOSIN - Use of preg_replace() with /e modifier is forbidden by configuration");
 			    }
@@ -523,37 +547,37 @@
 		    break;
 		    
 		case SUHOSIN_CODE_TYPE_LONGNAME:
-			suhosin_log(S_INCLUDE, "Include filename ('%s') is too long", op_array->filename);
+			suhosin_log(S_INCLUDE|S_GETCALLER, "Include filename ('%s') is too long", op_array->filename);
 			suhosin_bailout(TSRMLS_C);
 			break;
 
 		case SUHOSIN_CODE_TYPE_MANYDOTS:
-			suhosin_log(S_INCLUDE, "Include filename ('%s') contains too many '../'", op_array->filename);
+			suhosin_log(S_INCLUDE|S_GETCALLER, "Include filename ('%s') contains too many '../'", op_array->filename);
 			suhosin_bailout(TSRMLS_C);
 			break;
 	    
 		case SUHOSIN_CODE_TYPE_UPLOADED:
-		    suhosin_log(S_INCLUDE, "Include filename is an uploaded file");
+		    suhosin_log(S_INCLUDE|S_GETCALLER, "Include filename is an uploaded file");
 		    suhosin_bailout(TSRMLS_C);
 		    break;
 		    
 	    case SUHOSIN_CODE_TYPE_0FILE:
-			suhosin_log(S_INCLUDE, "Include filename contains an ASCIIZ character");
+			suhosin_log(S_INCLUDE|S_GETCALLER, "Include filename contains an ASCIIZ character");
 			suhosin_bailout(TSRMLS_C);
 			break;
 			
     		case SUHOSIN_CODE_TYPE_WRITABLE:
-    		        suhosin_log(S_INCLUDE, "Include filename ('%s') is writable by PHP process", op_array->filename);
+    		        suhosin_log(S_INCLUDE|S_GETCALLER, "Include filename ('%s') is writable by PHP process", op_array->filename);
     			suhosin_bailout(TSRMLS_C);
     			break;		    	
 
 	    case SUHOSIN_CODE_TYPE_BLACKURL:
-			suhosin_log(S_INCLUDE, "Include filename ('%s') is an URL that is forbidden by the blacklist", op_array->filename);
+			suhosin_log(S_INCLUDE|S_GETCALLER, "Include filename ('%s') is an URL that is forbidden by the blacklist", op_array->filename);
 			suhosin_bailout(TSRMLS_C);
 			break;
 			
 	    case SUHOSIN_CODE_TYPE_BADURL:
-			suhosin_log(S_INCLUDE, "Include filename ('%s') is an URL that is not allowed", op_array->filename);
+			suhosin_log(S_INCLUDE|S_GETCALLER, "Include filename ('%s') is an URL that is not allowed", op_array->filename);
 		    suhosin_bailout(TSRMLS_C);
 			break;
 
@@ -579,17 +603,22 @@
 	}
 
 continue_execution:
+#if PHP_MAJOR_VERSION > 5 || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 5)
+	old_execute_ex (execute_data TSRMLS_CC);
+#else
 	if (zo) {
 		old_execute_ZO (op_array, dummy TSRMLS_CC);
 	} else {
 		old_execute (op_array TSRMLS_CC);
 	}
+#endif
 	/* nothing to do */
 	SUHOSIN_G(in_code_type) = orig_code_type;
 	SUHOSIN_G(execution_depth)--;
 }
 /* }}} */
 
+#if PHP_MAJOR_VERSION < 5 || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION < 5)
 /* {{{ void suhosin_execute(zend_op_array *op_array TSRMLS_DC)
  *    This function provides a hook for execution */
 static void suhosin_execute(zend_op_array *op_array TSRMLS_DC)
@@ -604,11 +633,17 @@
 	suhosin_execute_ex(op_array, 1, dummy TSRMLS_CC);
 }	
 /* }}} */
+#endif
 
-
+#if PHP_MAJOR_VERSION > 5 || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 5)
+#define IH_HANDLER_PARAMS_REST int ht, zval *return_value, zval **return_value_ptr, zval *this_ptr, int return_value_used TSRMLS_DC
+#define IH_HANDLER_PARAMS internal_function_handler *ih, IH_HANDLER_PARAMS_REST
+#define IH_HANDLER_PARAM_PASSTHRU ih, ht, return_value, return_value_ptr, this_ptr, return_value_used TSRMLS_CC
+#else
 #define IH_HANDLER_PARAMS_REST zend_execute_data *execute_data_ptr, int return_value_used, int ht, zval *return_value TSRMLS_DC
 #define IH_HANDLER_PARAMS internal_function_handler *ih, IH_HANDLER_PARAMS_REST
 #define IH_HANDLER_PARAM_PASSTHRU ih, execute_data_ptr, return_value_used, ht, return_value TSRMLS_CC
+#endif
 
 HashTable ihandler_table;
 
@@ -626,12 +661,20 @@
 {
 	zval **regex,
 	     **replace,
-	     **subject,
-	     **limit;
+	     **subject;
 
+#ifndef PHP_ATLEAST_5_3
+	zval **limit;
 	if (ZEND_NUM_ARGS() < 3 || zend_get_parameters_ex(3, &regex, &replace, &subject, &limit) == FAILURE) {
 		return (0);
 	}
+#else
+	long limit = -1;
+	zval **zcount = NULL;
+	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "ZZZ|lZ", &regex, &replace, &subject, &limit, &zcount) == FAILURE) {
+		return (1);
+	}
+#endif
 		
 	if (Z_TYPE_PP(regex) == IS_ARRAY) {
 		zval	**regex_entry;
@@ -1022,6 +1065,7 @@
 	return (0);
 }
 
+#if PHP_MAJOR_VERSION < 5 || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION < 4)
 static int suhosin_php_body_write(const char *str, uint str_length TSRMLS_DC)
 {
 #define P_META_ROBOTS "<meta name=\"ROBOTS\" content=\"NOINDEX,NOFOLLOW,NOARCHIVE\" />"
@@ -1065,6 +1109,7 @@
 	RETVAL_TRUE;
 	return (1);
 }
+#endif
 
 
 static int ih_function_exists(IH_HANDLER_PARAMS)
@@ -1072,35 +1117,34 @@
 #ifndef PHP_ATLEAST_5_3
 	zval **function_name;
 #endif
+	char *name;
+	int name_len;
 	zend_function *func;
 	char *lcname;
 	zend_bool retval;
-	int func_name_len;
 	
 #ifndef PHP_ATLEAST_5_3
 	if (ZEND_NUM_ARGS()!=1 || zend_get_parameters_ex(1, &function_name)==FAILURE) {
 		ZEND_WRONG_PARAM_COUNT_WITH_RETVAL(1);
 	}
 	convert_to_string_ex(function_name);
-	func_name_len = Z_STRLEN_PP(function_name);
-	lcname = estrndup(Z_STRVAL_PP(function_name), func_name_len);	
-	zend_str_tolower(lcname, func_name_len);
+	name = Z_STRVAL_PP(function_name);
+	name_len = Z_STRLEN_PP(function_name);
 #else
-	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "s", &lcname, &func_name_len) == FAILURE) {
-		return;
+	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "s", &name, &name_len) == FAILURE) {
+		return (1);
 	}
+#endif
+	lcname = zend_str_tolower_dup(name, name_len);
 
 	/* Ignore leading "\" */
-	if (lcname[0] == '\\') {
-		lcname = &lcname[1];
-		func_name_len--;
+	name = lcname;
+	if (name_len > 0 && lcname[0] == '\\') {
+		name = &lcname[1];
+		name_len--;
 	}
-	lcname = zend_str_tolower_dup(lcname, func_name_len);	
-#endif
 
-	retval = (zend_hash_find(EG(function_table), lcname, func_name_len+1, (void **)&func) == SUCCESS);
-	
-	efree(lcname);
+	retval = (zend_hash_find(EG(function_table), name, name_len+1, (void **)&func) == SUCCESS);
 
 	/*
 	 * A bit of a hack, but not a bad one: we see if the handler of the function
@@ -1114,26 +1158,28 @@
 	/* Now check if function is forbidden by Suhosin */
 	if (SUHOSIN_G(in_code_type) == SUHOSIN_EVAL) {
 		if (SUHOSIN_G(eval_whitelist) != NULL) {
-			if (!zend_hash_exists(SUHOSIN_G(eval_whitelist), lcname, func_name_len+1)) {
+			if (!zend_hash_exists(SUHOSIN_G(eval_whitelist), name, name_len+1)) {
 			    retval = 0;
 			}
 		} else if (SUHOSIN_G(eval_blacklist) != NULL) {
-			if (zend_hash_exists(SUHOSIN_G(eval_blacklist), lcname, func_name_len+1)) {
+			if (zend_hash_exists(SUHOSIN_G(eval_blacklist), name, name_len+1)) {
 			    retval = 0;
 			}
 		}
 	}
 	
 	if (SUHOSIN_G(func_whitelist) != NULL) {
-		if (!zend_hash_exists(SUHOSIN_G(func_whitelist), lcname, func_name_len+1)) {
+		if (!zend_hash_exists(SUHOSIN_G(func_whitelist), name, name_len+1)) {
 		    retval = 0;
 		}
 	} else if (SUHOSIN_G(func_blacklist) != NULL) {
-		if (zend_hash_exists(SUHOSIN_G(func_blacklist), lcname, func_name_len+1)) {
+		if (zend_hash_exists(SUHOSIN_G(func_blacklist), name, name_len+1)) {
 		    retval = 0;
 		}
 	}
 
+	efree(lcname);
+
 	RETVAL_BOOL(retval);
 	return (1);
 }
@@ -1344,7 +1390,7 @@
 
     suhosin_SHA256Init(&context);
 	suhosin_SHA256Update(&context, (void *) seedbuf, sizeof(php_uint32) * 8);
-	suhosin_SHA256Final(seedbuf, &context);
+	suhosin_SHA256Final((void *)seedbuf, &context);
 }
 /* }}} */
 
@@ -1501,7 +1547,7 @@
 {
 #ifdef PHP_ATLEAST_5_3
 	if (zend_parse_parameters_none() == FAILURE) {
-		return;
+		return (1);
 	}
 #else
         int argc = ZEND_NUM_ARGS();
@@ -1518,7 +1564,10 @@
     { "preg_replace", ih_preg_replace, NULL, NULL, NULL },
     { "mail", ih_mail, NULL, NULL, NULL },
     { "symlink", ih_symlink, NULL, NULL, NULL },
+
+#if PHP_MAJOR_VERSION < 5 || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION < 4)
     { "phpinfo", ih_phpinfo, NULL, NULL, NULL },
+#endif
 	
 	{ "srand", ih_srand, NULL, NULL, NULL },
 	{ "mt_srand", ih_mt_srand, NULL, NULL, NULL },
@@ -1575,21 +1624,30 @@
 #define FUNCTION_WARNING() zend_error(E_WARNING, "%s() has been disabled for security reasons", get_active_function_name(TSRMLS_C));
 #define FUNCTION_SIMULATE_WARNING() zend_error(E_WARNING, "SIMULATION - %s() has been disabled for security reasons", get_active_function_name(TSRMLS_C));
 
-/* {{{ void suhosin_execute_internal(zend_execute_data *execute_data_ptr, int return_value_used TSRMLS_DC)
+/* {{{ void suhosin_execute_internal
  *    This function provides a hook for internal execution */
+#if PHP_MAJOR_VERSION > 5 || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 5)
+#define EX_T(offset) (*EX_TMP_VAR(execute_data_ptr, offset))
+
+static void suhosin_execute_internal(zend_execute_data *execute_data_ptr, zend_fcall_info *fci, int return_value_used TSRMLS_DC)
+{
+	zval **return_value_ptr;
+	zval *this_ptr;
+#else
 static void suhosin_execute_internal(zend_execute_data *execute_data_ptr, int return_value_used TSRMLS_DC)
 {
+#endif
+	zval *return_value;
+	int ht;
 	char *lcname;
 	int function_name_strlen, free_lcname = 0;
-	zval *return_value;
 	zend_class_entry *ce = NULL;
-	int ht;
 	internal_function_handler *ih;
 
 #ifdef ZEND_ENGINE_2
 	ce = ((zend_internal_function *) execute_data_ptr->function_state.function)->scope;
 #endif
-	lcname = ((zend_internal_function *) execute_data_ptr->function_state.function)->function_name;
+	lcname = (char *)((zend_internal_function *) execute_data_ptr->function_state.function)->function_name;
 	function_name_strlen = strlen(lcname);
 	
 	/* handle methodcalls correctly */
@@ -1605,20 +1663,13 @@
 		zend_str_tolower(lcname, function_name_strlen);
 	}
 	
-#ifdef ZEND_ENGINE_2  
-	return_value = (*(temp_variable *)((char *) execute_data_ptr->Ts + execute_data_ptr->opline->result.u.var)).var.ptr;
-#else
-        return_value = execute_data_ptr->Ts[execute_data_ptr->opline->result.u.var].var.ptr;
-#endif
-	ht = execute_data_ptr->opline->extended_value;
-
 	SDEBUG("function: %s", lcname);
 
 	if (SUHOSIN_G(in_code_type) == SUHOSIN_EVAL) {
 	
 		if (SUHOSIN_G(eval_whitelist) != NULL) {
 			if (!zend_hash_exists(SUHOSIN_G(eval_whitelist), lcname, function_name_strlen+1)) {
-				suhosin_log(S_EXECUTOR, "function outside of eval whitelist called: %s()", lcname);
+				suhosin_log(S_EXECUTOR|S_GETCALLER, "function outside of eval whitelist called: %s()", lcname);
 				if (!SUHOSIN_G(simulation)) {
 				        goto execute_internal_bailout;
         			} else {
@@ -1627,7 +1678,7 @@
 			}
 		} else if (SUHOSIN_G(eval_blacklist) != NULL) {
 			if (zend_hash_exists(SUHOSIN_G(eval_blacklist), lcname, function_name_strlen+1)) {
-				suhosin_log(S_EXECUTOR, "function within eval blacklist called: %s()", lcname);
+				suhosin_log(S_EXECUTOR|S_GETCALLER, "function within eval blacklist called: %s()", lcname);
 				if (!SUHOSIN_G(simulation)) {
 				        goto execute_internal_bailout;
         			} else {
@@ -1639,7 +1690,7 @@
 	
 	if (SUHOSIN_G(func_whitelist) != NULL) {
 		if (!zend_hash_exists(SUHOSIN_G(func_whitelist), lcname, function_name_strlen+1)) {
-			suhosin_log(S_EXECUTOR, "function outside of whitelist called: %s()", lcname);
+			suhosin_log(S_EXECUTOR|S_GETCALLER, "function outside of whitelist called: %s()", lcname);
 			if (!SUHOSIN_G(simulation)) {
 			        goto execute_internal_bailout;
 			} else {
@@ -1648,7 +1699,7 @@
 		}
 	} else if (SUHOSIN_G(func_blacklist) != NULL) {
 		if (zend_hash_exists(SUHOSIN_G(func_blacklist), lcname, function_name_strlen+1)) {
-			suhosin_log(S_EXECUTOR, "function within blacklist called: %s()", lcname);
+			suhosin_log(S_EXECUTOR|S_GETCALLER, "function within blacklist called: %s()", lcname);
 			if (!SUHOSIN_G(simulation)) {
 			        goto execute_internal_bailout;
 			} else {
@@ -1658,19 +1709,51 @@
 	}
 	
 	if (zend_hash_find(&ihandler_table, lcname, function_name_strlen+1, (void **)&ih) == SUCCESS) {
-	
 		int retval = 0;
 		void *handler = ((zend_internal_function *) execute_data_ptr->function_state.function)->handler;
 		
+#if PHP_MAJOR_VERSION > 5 || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 5)
+		if (fci) {
+			return_value = *fci->retval_ptr_ptr;
+			return_value_ptr = fci->retval_ptr_ptr;
+			this_ptr = fci->object_ptr;
+			ht = fci->param_count;
+		} else {
+			temp_variable *ret = &EX_T(execute_data_ptr->opline->result.var);
+			zend_function *fbc = execute_data_ptr->function_state.function;
+			return_value = ret->var.ptr;
+			return_value_ptr = (fbc->common.fn_flags & ZEND_ACC_RETURN_REFERENCE) ? &ret->var.ptr : NULL;
+			this_ptr = execute_data_ptr->object;
+			ht = execute_data_ptr->opline->extended_value;
+		}
+#else
+		ht = execute_data_ptr->opline->extended_value;
+#if (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION == 4)
+		return_value = (*(temp_variable *)((char *) execute_data_ptr->Ts + execute_data_ptr->opline->result.var)).var.ptr;
+#elif (PHP_MAJOR_VERSION == 5)
+		return_value = (*(temp_variable *)((char *) execute_data_ptr->Ts + execute_data_ptr->opline->result.u.var)).var.ptr;
+#else
+		return_value = execute_data_ptr->Ts[execute_data_ptr->opline->result.u.var].var.ptr;
+#endif
+#endif
+
 		if (handler != ZEND_FN(display_disabled_function)) {
 		    retval = ih->handler(IH_HANDLER_PARAM_PASSTHRU);
 		}
 		
 		if (retval == 0) {
+#if PHP_MAJOR_VERSION > 5 || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 5)
+			old_execute_internal(execute_data_ptr, fci, return_value_used TSRMLS_CC);
+#else
 			old_execute_internal(execute_data_ptr, return_value_used TSRMLS_CC);
+#endif
 		}
 	} else {
+#if PHP_MAJOR_VERSION > 5 || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 5)
+		old_execute_internal(execute_data_ptr, fci, return_value_used TSRMLS_CC);
+#else
 		old_execute_internal(execute_data_ptr, return_value_used TSRMLS_CC);
+#endif
 	}
 	if (free_lcname == 1) {
 		efree(lcname);
@@ -1686,6 +1769,7 @@
 /* }}} */
 
 
+#if PHP_MAJOR_VERSION < 5 || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION < 5)
 /* {{{ int function_lookup(zend_extension *extension)
  */
 static int function_lookup(zend_extension *extension)
@@ -1703,6 +1787,7 @@
 	return 0;
 }
 /* }}} */
+#endif
 
 
 /* {{{ void suhosin_hook_execute()
@@ -1711,6 +1796,10 @@
 {
 	internal_function_handler *ih;
 	
+#if PHP_MAJOR_VERSION > 5 || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 5)
+	old_execute_ex = zend_execute_ex;
+	zend_execute_ex = suhosin_execute_ex;
+#else
 	old_execute = zend_execute;
 	zend_execute = suhosin_execute;
 	
@@ -1727,6 +1816,7 @@
 	if (zo_set_oe_ex != NULL) {
 		old_execute_ZO = zo_set_oe_ex(suhosin_execute_ZO);
 	}
+#endif
 	
 	old_execute_internal = zend_execute_internal;
 	if (old_execute_internal == NULL) {
@@ -1761,11 +1851,15 @@
  */
 void suhosin_unhook_execute()
 {
+#if PHP_MAJOR_VERSION > 5 || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 5)
+	zend_execute_ex = old_execute_ex;
+#else
 	if (zo_set_oe_ex) {
 		zo_set_oe_ex(old_execute_ZO);
 	}
 	
 	zend_execute = old_execute;
+#endif
 	
 /*	zend_compile_file = old_compile_file; */
 
diff -uNr suhosin-0.9.33/header.c suhosin-0.9.33.php55/header.c
--- suhosin-0.9.33/header.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php55/header.c	Fri Feb 14 18:17:06 2014
@@ -3,7 +3,7 @@
   | Suhosin Version 1                                                    |
   +----------------------------------------------------------------------+
   | Copyright (c) 2006-2007 The Hardened-PHP Project                     |
-  | Copyright (c) 2007-2012 SektionEins GmbH                             |
+  | Copyright (c) 2007-2014 SektionEins GmbH                             |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
@@ -211,7 +211,7 @@
 
 		for (i=0; i<sapi_header->header_len; i++, tmp++) {
 			if (tmp[0] == 0) {
-				char *fname = get_active_function_name(TSRMLS_C);
+				char *fname = (char *)get_active_function_name(TSRMLS_C);
 
 				if (!fname) {
 					fname = "unknown";
@@ -226,7 +226,7 @@
 				continue;
 			} else if ((tmp[0] == '\r' && (tmp[1] != '\n' || i == 0)) || 
 			   (tmp[0] == '\n' && (i == sapi_header->header_len-1 || i == 0 || (tmp[1] != ' ' && tmp[1] != '\t')))) {
-				char *fname = get_active_function_name(TSRMLS_C);
+				char *fname = (char *)get_active_function_name(TSRMLS_C);
 
 				if (!fname) {
 					fname = "unknown";
diff -uNr suhosin-0.9.33/ifilter.c suhosin-0.9.33.php55/ifilter.c
--- suhosin-0.9.33/ifilter.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php55/ifilter.c	Fri Feb 14 18:17:06 2014
@@ -3,7 +3,7 @@
   | Suhosin Version 1                                                    |
   +----------------------------------------------------------------------+
   | Copyright (c) 2006-2007 The Hardened-PHP Project                     |
-  | Copyright (c) 2007-2012 SektionEins GmbH                             |
+  | Copyright (c) 2007-2014 SektionEins GmbH                             |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
@@ -33,26 +33,6 @@
 
 static void (*orig_register_server_variables)(zval *track_vars_array TSRMLS_DC) = NULL;
 
-#ifdef ZEND_ENGINE_2
-#define HASH_HTTP_GET_VARS      0x2095733f
-#define HASH_HTTP_POST_VARS     0xbfee1265
-#define HASH_HTTP_COOKIE_VARS   0xaaca9d99
-#define HASH_HTTP_ENV_VARS      0x1fe186a8
-#define HASH_HTTP_SERVER_VARS   0xc987afd6
-#define HASH_HTTP_SESSION_VARS  0x7aba0d43
-#define HASH_HTTP_POST_FILES    0x98eb1ddc
-#define HASH_HTTP_RAW_POST_DATA 0xdd633fec
-#else
-#define HASH_HTTP_GET_VARS      0x8d8645bd
-#define HASH_HTTP_POST_VARS     0x7c699bf3
-#define HASH_HTTP_COOKIE_VARS   0x93ad0d6f
-#define HASH_HTTP_ENV_VARS      0x84da3016
-#define HASH_HTTP_SERVER_VARS   0x6dbf964e
-#define HASH_HTTP_SESSION_VARS  0x322906f5
-#define HASH_HTTP_POST_FILES    0xe4e4ce70
-#define HASH_HTTP_RAW_POST_DATA 0xe6137a0e
-#endif
-
 
 /* {{{ normalize_varname
  */
@@ -146,7 +126,7 @@
 	if (zend_hash_find(arr, key, klen, (void **) &tzval) == SUCCESS &&
 			Z_TYPE_PP(tzval) == IS_STRING) {
 		
-		s = t = Z_STRVAL_PP(tzval);
+		s = t = (unsigned char *)Z_STRVAL_PP(tzval);
 		for (; *t; t++) {
 			if (suhosin_is_dangerous_char[*t]) {
 				*t = '?';
@@ -168,7 +148,7 @@
 	if (zend_hash_find(arr, key, klen, (void **) &tzval) == SUCCESS &&
 			Z_TYPE_PP(tzval) == IS_STRING) {
 		
-		temp = Z_STRVAL_PP(tzval);
+		temp = (unsigned char *)Z_STRVAL_PP(tzval);
 		
 		t = temp;
 		for (t = temp; *t; t++) {
@@ -195,7 +175,7 @@
 		}
 		*n = 0;
 		
-		Z_STRVAL_PP(tzval) = newv;
+		Z_STRVAL_PP(tzval) = (char *)newv;
 		Z_STRLEN_PP(tzval) = n-newv;
 	}
 }
@@ -213,21 +193,21 @@
         svars = Z_ARRVAL_P(track_vars_array);
         
 	if (!SUHOSIN_G(simulation)) {
-    		retval = zend_hash_del_key_or_index(svars, "HTTP_GET_VARS", sizeof("HTTP_GET_VARS"), HASH_HTTP_GET_VARS, HASH_DEL_INDEX);
+    		retval = zend_hash_del(svars, "HTTP_GET_VARS", sizeof("HTTP_GET_VARS"));
     		if (retval == SUCCESS) failure = 1;
-    		retval = zend_hash_del_key_or_index(svars, "HTTP_POST_VARS", sizeof("HTTP_POST_VARS"), HASH_HTTP_POST_VARS, HASH_DEL_INDEX);
+    		retval = zend_hash_del(svars, "HTTP_POST_VARS", sizeof("HTTP_POST_VARS"));
     		if (retval == SUCCESS) failure = 1;
-    		retval = zend_hash_del_key_or_index(svars, "HTTP_COOKIE_VARS", sizeof("HTTP_COOKIE_VARS"), HASH_HTTP_COOKIE_VARS, HASH_DEL_INDEX);
+    		retval = zend_hash_del(svars, "HTTP_COOKIE_VARS", sizeof("HTTP_COOKIE_VARS"));
     		if (retval == SUCCESS) failure = 1;
-    		retval = zend_hash_del_key_or_index(svars, "HTTP_ENV_VARS", sizeof("HTTP_ENV_VARS"), HASH_HTTP_ENV_VARS, HASH_DEL_INDEX);
+    		retval = zend_hash_del(svars, "HTTP_ENV_VARS", sizeof("HTTP_ENV_VARS"));
     		if (retval == SUCCESS) failure = 1;
-    		retval = zend_hash_del_key_or_index(svars, "HTTP_SERVER_VARS", sizeof("HTTP_SERVER_VARS"), HASH_HTTP_SERVER_VARS, HASH_DEL_INDEX);
+    		retval = zend_hash_del(svars, "HTTP_SERVER_VARS", sizeof("HTTP_SERVER_VARS"));
     		if (retval == SUCCESS) failure = 1;
-    		retval = zend_hash_del_key_or_index(svars, "HTTP_SESSION_VARS", sizeof("HTTP_SESSION_VARS"), HASH_HTTP_SESSION_VARS, HASH_DEL_INDEX);
+    		retval = zend_hash_del(svars, "HTTP_SESSION_VARS", sizeof("HTTP_SESSION_VARS"));
     		if (retval == SUCCESS) failure = 1;
-    		retval = zend_hash_del_key_or_index(svars, "HTTP_POST_FILES", sizeof("HTTP_POST_FILES"), HASH_HTTP_POST_FILES, HASH_DEL_INDEX);
+    		retval = zend_hash_del(svars, "HTTP_POST_FILES", sizeof("HTTP_POST_FILES"));
 		if (retval == SUCCESS) failure = 1;
-    		retval = zend_hash_del_key_or_index(svars, "HTTP_RAW_POST_DATA", sizeof("HTTP_RAW_POST_DATA"), HASH_HTTP_RAW_POST_DATA, HASH_DEL_INDEX);
+    		retval = zend_hash_del(svars, "HTTP_RAW_POST_DATA", sizeof("HTTP_RAW_POST_DATA"));
     		if (retval == SUCCESS) failure = 1;
 	} else {
 		retval = zend_hash_exists(svars, "HTTP_GET_VARS", sizeof("HTTP_GET_VARS"));
@@ -350,7 +330,7 @@
 	switch (arg) {
 	    case PARSE_GET:
 			if (SUHOSIN_G(max_get_vars) && SUHOSIN_G(max_get_vars) <= SUHOSIN_G(cur_get_vars)) {
-				suhosin_log(S_VARS, "configured GET variable limit exceeded - dropped variable '%s'", var);
+				suhosin_log(S_VARS, "configured GET variable limit exceeded - dropped variable '%s' - all further GET variables are dropped", var);
 				if (!SUHOSIN_G(simulation)) {
                             		SUHOSIN_G(no_more_get_variables) = 1;
 					return 0;
@@ -359,7 +339,7 @@
 			break;
 	    case PARSE_COOKIE:
 			if (SUHOSIN_G(max_cookie_vars) && SUHOSIN_G(max_cookie_vars) <= SUHOSIN_G(cur_cookie_vars)) {
-				suhosin_log(S_VARS, "configured COOKIE variable limit exceeded - dropped variable '%s'", var);
+				suhosin_log(S_VARS, "configured COOKIE variable limit exceeded - dropped variable '%s' - all further COOKIE variables are dropped", var);
 				if (!SUHOSIN_G(simulation)) {
                             		SUHOSIN_G(no_more_cookie_variables) = 1;
 					return 0;
@@ -368,7 +348,7 @@
 			break;
 	    case PARSE_POST:
 			if (SUHOSIN_G(max_post_vars) && SUHOSIN_G(max_post_vars) <= SUHOSIN_G(cur_post_vars)) {
-				suhosin_log(S_VARS, "configured POST variable limit exceeded - dropped variable '%s'", var);
+				suhosin_log(S_VARS, "configured POST variable limit exceeded - dropped variable '%s' - all further POST variables are dropped", var);
 				if (!SUHOSIN_G(simulation)) {
                             		SUHOSIN_G(no_more_post_variables) = 1;
                             		return 0;
diff -uNr suhosin-0.9.33/log.c suhosin-0.9.33.php55/log.c
--- suhosin-0.9.33/log.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php55/log.c	Fri Feb 14 18:17:06 2014
@@ -3,7 +3,7 @@
   | Suhosin Version 1                                                    |
   +----------------------------------------------------------------------+
   | Copyright (c) 2006-2007 The Hardened-PHP Project                     |
-  | Copyright (c) 2007-2012 SektionEins GmbH                             |
+  | Copyright (c) 2007-2014 SektionEins GmbH                             |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
@@ -36,6 +36,12 @@
 #include <sys/socket.h>
 #endif
 
+#ifdef HAVE_SYS_TIME_H
+#include <sys/time.h>
+#elif defined(PHP_WIN32)
+#include "win32/time.h"
+#endif
+
 #if defined(PHP_WIN32) || defined(__riscos__) || defined(NETWARE)
 #undef AF_UNIX
 #endif
@@ -88,6 +94,7 @@
 {
 	int s, r, i=0, fd;
 	long written, towrite;
+	int getcaller=0;
 	char *wbuf;
 	struct timeval tv;
 	time_t now;
@@ -109,6 +116,12 @@
 	va_list ap;
 	TSRMLS_FETCH();
 
+#if PHP_VERSION_ID >= 50500
+	getcaller = (loglevel & S_GETCALLER) == S_GETCALLER;
+#endif
+	/* remove the S_GETCALLER flag */
+	loglevel = loglevel & ~S_GETCALLER;
+
 	SDEBUG("(suhosin_log) loglevel: %d log_syslog: %u - log_sapi: %u - log_script: %u", loglevel, SUHOSIN_G(log_syslog), SUHOSIN_G(log_sapi), SUHOSIN_G(log_script));
 
 	/* dump core if wanted */
@@ -145,12 +158,18 @@
 	}
 	
 	if (zend_is_executing(TSRMLS_C)) {
-		if (EG(current_execute_data)) {
-			lineno = EG(current_execute_data)->opline->lineno;
-			fname = EG(current_execute_data)->op_array->filename;
+		zend_execute_data *exdata = EG(current_execute_data);
+		if (exdata) {
+			if (getcaller && exdata->prev_execute_data) {
+				lineno = exdata->prev_execute_data->opline->lineno;
+				fname = (char *)exdata->prev_execute_data->op_array->filename;
+			} else {
+				lineno = exdata->opline->lineno;
+				fname = (char *)exdata->op_array->filename;
+			}
 		} else {
 			lineno = zend_get_executed_lineno(TSRMLS_C);
-			fname = zend_get_executed_filename(TSRMLS_C);
+			fname = (char *)zend_get_executed_filename(TSRMLS_C);
 		}
 		ap_php_snprintf(buf, sizeof(buf), "%s - %s (attacker '%s', file '%s', line %u)", alertstring, error, ip_address, fname, lineno);
 	} else {
@@ -261,7 +280,11 @@
 	/* SAPI Logging activated? */
 	SDEBUG("(suhosin_log) log_syslog: %u - log_sapi: %u - log_script: %u - log_phpscript: %u", SUHOSIN_G(log_syslog), SUHOSIN_G(log_sapi), SUHOSIN_G(log_script), SUHOSIN_G(log_phpscript));
 	if (((SUHOSIN_G(log_sapi)|S_INTERNAL) & loglevel)!=0) {
+#if PHP_VERSION_ID < 50400
 		sapi_module.log_message(buf);
+#else
+		sapi_module.log_message(buf TSRMLS_CC);
+#endif
 	}
 
 /*log_script:*/
@@ -317,7 +340,9 @@
 		zval *result = NULL;
 		
 		long orig_execution_depth = SUHOSIN_G(execution_depth);
+#if PHP_VERSION_ID < 50400
 		zend_bool orig_safe_mode = PG(safe_mode);
+#endif
 		char *orig_basedir = PG(open_basedir);
 		
 		char *phpscript = SUHOSIN_G(log_phpscriptname);
@@ -354,14 +379,18 @@
 				
 				SUHOSIN_G(execution_depth) = 0;
 				if (SUHOSIN_G(log_phpscript_is_safe)) {
+#if PHP_VERSION_ID < 50400
 					PG(safe_mode) = 0;
+#endif
 					PG(open_basedir) = NULL;
 				}
 				
 				zend_execute(new_op_array TSRMLS_CC);
 				
 				SUHOSIN_G(execution_depth) = orig_execution_depth;
+#if PHP_VERSION_ID < 50400
 				PG(safe_mode) = orig_safe_mode;
+#endif
 				PG(open_basedir) = orig_basedir;
 				
 #ifdef ZEND_ENGINE_2
diff -uNr suhosin-0.9.33/mbregex.h suhosin-0.9.33.php55/mbregex.h
--- suhosin-0.9.33/mbregex.h	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php55/mbregex.h	Fri Feb 14 18:17:06 2014
@@ -3,7 +3,7 @@
   | Suhosin Version 1                                                    |
   +----------------------------------------------------------------------+
   | Copyright (c) 2006-2007 The Hardened-PHP Project                     |
-  | Copyright (c) 2007-2012 SektionEins GmbH                             |
+  | Copyright (c) 2007-2014 SektionEins GmbH                             |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
diff -uNr suhosin-0.9.33/memory_limit.c suhosin-0.9.33.php55/memory_limit.c
--- suhosin-0.9.33/memory_limit.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php55/memory_limit.c	Fri Feb 14 18:17:06 2014
@@ -3,7 +3,7 @@
   | Suhosin Version 1                                                    |
   +----------------------------------------------------------------------+
   | Copyright (c) 2006-2007 The Hardened-PHP Project                     |
-  | Copyright (c) 2007-2012 SektionEins GmbH                             |
+  | Copyright (c) 2007-2014 SektionEins GmbH                             |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
@@ -34,8 +34,11 @@
  */
 static PHP_INI_MH(suhosin_OnChangeMemoryLimit)
 {
-	long hard_memory_limit = 1<<30;
-	
+#if SIZEOF_LONG==8
+	long hard_memory_limit = 0x7fffffffffffffff;
+#elif SIZEOF_LONG==4
+	long hard_memory_limit = 0x7fffffff;
+#endif /* will produce a compile error or SIZEOF_LONG is not 4 or 8 */
 	if (stage == ZEND_INI_STAGE_RUNTIME) {
 		if (SUHOSIN_G(memory_limit) > 0) {
 			SUHOSIN_G(hard_memory_limit) = SUHOSIN_G(memory_limit);
@@ -50,13 +53,13 @@
 		PG(memory_limit) = zend_atol(new_value, new_value_length);
 		if (hard_memory_limit > 0) {
 			if (PG(memory_limit) > hard_memory_limit) {
-				suhosin_log(S_MISC, "script tried to increase memory_limit to %u bytes which is above the allowed value", PG(memory_limit));
+				suhosin_log(S_MISC, "script tried to increase memory_limit to %lu bytes which is above the allowed value", PG(memory_limit));
 				if (!SUHOSIN_G(simulation)) {
 					PG(memory_limit) = hard_memory_limit;
 					return FAILURE;
 				}
 			} else if (PG(memory_limit) < 0) {
-				suhosin_log(S_MISC, "script tried to disable memory_limit by setting it to a negative value %d bytes which is not allowed", PG(memory_limit));
+				suhosin_log(S_MISC, "script tried to disable memory_limit by setting it to a negative value %ld bytes which is not allowed", PG(memory_limit));
 				if (!SUHOSIN_G(simulation)) {
 					PG(memory_limit) = hard_memory_limit;
 					return FAILURE;
diff -uNr suhosin-0.9.33/php_suhosin.h suhosin-0.9.33.php55/php_suhosin.h
--- suhosin-0.9.33/php_suhosin.h	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php55/php_suhosin.h	Fri Feb 14 18:17:06 2014
@@ -3,7 +3,7 @@
   | Suhosin Version 1                                                    |
   +----------------------------------------------------------------------+
   | Copyright (c) 2006-2007 The Hardened-PHP Project                     |
-  | Copyright (c) 2007-2012 SektionEins GmbH                             |
+  | Copyright (c) 2007-2014 SektionEins GmbH                             |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
@@ -186,6 +186,7 @@
 	int (*old_php_body_write)(const char *str, unsigned int str_length TSRMLS_DC);
 
 /*	session */
+	void	*old_s_module;
 	void	*s_module;
 	int 	(*old_s_read)(void **mod_data, const char *key, char **val, int *vallen TSRMLS_DC);
 	int	(*old_s_write)(void **mod_data, const char *key, const char *val, const int vallen TSRMLS_DC);
@@ -281,6 +282,7 @@
 #define S_MAIL				(1<<7L)
 #define S_SESSION			(1<<8L)
 #define S_INTERNAL			(1<<29L)
+#define S_GETCALLER         (1<<30L)
 #define S_ALL (S_MEMORY | S_VARS | S_INCLUDE | S_FILES | S_MAIL | S_SESSION | S_MISC | S_SQL | S_EXECUTOR)
 #endif
 
@@ -308,7 +310,7 @@
 char *suhosin_cookie_decryptor(TSRMLS_D);
 char *suhosin_getenv(char *name, size_t name_len TSRMLS_DC);
 void suhosin_hook_post_handlers(TSRMLS_D);
-void suhosin_unhook_post_handlers();
+void suhosin_unhook_post_handlers(TSRMLS_D);
 void suhosin_hook_register_server_variables();
 void suhosin_hook_header_handler();
 void suhosin_unhook_header_handler();
diff -uNr suhosin-0.9.33/post_handler.c suhosin-0.9.33.php55/post_handler.c
--- suhosin-0.9.33/post_handler.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php55/post_handler.c	Fri Feb 14 18:17:07 2014
@@ -3,7 +3,7 @@
   | Suhosin Version 1                                                    |
   +----------------------------------------------------------------------+
   | Copyright (c) 2006-2007 The Hardened-PHP Project                     |
-  | Copyright (c) 2007-2012 SektionEins GmbH                             |
+  | Copyright (c) 2007-2014 SektionEins GmbH                             |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
@@ -40,7 +40,9 @@
 {
     char *var, *val, *e, *s, *p;
     zval *array_ptr = (zval *) arg;
-
+#if PHP_VERSION_ID >= 50311
+	long count = 0;
+#endif
     if (SG(request_info).post_data==NULL) {
         return;
     }	
@@ -52,6 +54,13 @@
 last_value:
         if ((val = memchr(s, '=', (p - s)))) { /* have a value */
             unsigned int val_len, new_val_len;
+
+#if PHP_VERSION_ID >= 50311
+			if (++count > PG(max_input_vars)) {
+				php_error_docref(NULL TSRMLS_CC, E_WARNING, "Input variables exceeded %ld. To increase the limit change max_input_vars in php.ini.", PG(max_input_vars));
+				return;
+			}
+#endif
             var = s;
 
             php_url_decode(var, (val - s));
@@ -60,7 +69,7 @@
             val = estrndup(val, val_len);
             if (suhosin_input_filter(PARSE_POST, var, &val, val_len, &new_val_len TSRMLS_CC)) {
 #ifdef ZEND_ENGINE_2
-                if (sapi_module.input_filter(PARSE_POST, var, &val, new_val_len, &new_val_len TSRMLS_CC)) {
+                if (sapi_module.input_filter(PARSE_POST, var, &val, val_len, &new_val_len TSRMLS_CC)) {
 #endif
                     php_register_variable_safe(var, val, new_val_len, array_ptr TSRMLS_CC);
 #ifdef ZEND_ENGINE_2
@@ -82,7 +91,7 @@
 static void suhosin_post_handler_modification(sapi_post_entry *spe)
 {
 	char *content_type = estrndup(spe->content_type, spe->content_type_len);
-	suhosin_log(S_VARS, "some extension replaces the POST handler for %s - Suhosin's protection will be incomplete", content_type);
+	suhosin_log(S_VARS, "some extension replaces the POST handler for %s - Suhosin's protection might be incomplete", content_type);
 	efree(content_type);
 }
 
@@ -125,7 +134,9 @@
  */
 static sapi_post_entry suhosin_post_entries[] = {
 	{ DEFAULT_POST_CONTENT_TYPE, sizeof(DEFAULT_POST_CONTENT_TYPE)-1, sapi_read_standard_form_data,	suhosin_std_post_handler },
+#if PHP_VERSION_ID < 50400
 	{ MULTIPART_CONTENT_TYPE,    sizeof(MULTIPART_CONTENT_TYPE)-1,    NULL,                         suhosin_rfc1867_post_handler },
+#endif
 	{ NULL, 0, NULL, NULL }
 };
 /* }}} */
@@ -135,6 +146,14 @@
 	HashTable tempht;
 	zend_ini_entry *ini_entry;
 	
+	old_rfc1867_callback = php_rfc1867_callback;
+
+#if PHP_VERSION_ID >= 50400
+	/* the RFC1867 code is now good enough in PHP to handle our filter just as a registered callback */
+	php_rfc1867_callback = suhosin_rfc1867_filter;
+	sapi_unregister_post_entry(&suhosin_post_entries[0] TSRMLS_CC);
+	sapi_register_post_entries(suhosin_post_entries TSRMLS_CC);
+#else
 #if PHP_MAJOR_VERSION > 5 || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION > 0)
 	sapi_unregister_post_entry(&suhosin_post_entries[0] TSRMLS_CC);
 	sapi_unregister_post_entry(&suhosin_post_entries[1] TSRMLS_CC);
@@ -144,14 +163,15 @@
 	sapi_unregister_post_entry(&suhosin_post_entries[1]);
 	sapi_register_post_entries(suhosin_post_entries);
 #endif
+#endif
 	/* we want to get notified if another extension deregisters the suhosin post handlers */
 
 	/* we need to tell suhosin patch that there is a new valid destructor */
 	/* therefore we have create HashTable that has this destructor */
-	zend_hash_init(&tempht, 0, NULL, suhosin_post_handler_modification, 0);
+	zend_hash_init(&tempht, 0, NULL, (dtor_func_t)suhosin_post_handler_modification, 0);
 	zend_hash_destroy(&tempht);
 	/* And now we can overwrite the destructor for post entries */
-	SG(known_post_content_types).pDestructor = suhosin_post_handler_modification;
+	SG(known_post_content_types).pDestructor = (dtor_func_t)suhosin_post_handler_modification;
 	
 	/* we have to stop mbstring from replacing our post handler */
 	if (zend_hash_find(EG(ini_directives), "mbstring.encoding_translation", sizeof("mbstring.encoding_translation"), (void **) &ini_entry) == FAILURE) {
@@ -162,9 +182,13 @@
 	ini_entry->on_modify = suhosin_OnUpdate_mbstring_encoding_translation;
 }
 
-void suhosin_unhook_post_handlers()
+void suhosin_unhook_post_handlers(TSRMLS_D)
 {
 	zend_ini_entry *ini_entry;
+
+#if PHP_VERSION_ID >= 50400
+	php_rfc1867_callback = old_rfc1867_callback;
+#endif
 
 	/* Restore to an empty destructor */
 	SG(known_post_content_types).pDestructor = NULL;
diff -uNr suhosin-0.9.33/rfc1867.c suhosin-0.9.33.php55/rfc1867.c
--- suhosin-0.9.33/rfc1867.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php55/rfc1867.c	Fri Feb 14 18:17:07 2014
@@ -2,7 +2,7 @@
    +----------------------------------------------------------------------+
    | PHP Version 5                                                        |
    +----------------------------------------------------------------------+
-   | Copyright (c) 1997-2006 The PHP Group                                |
+   | Copyright (c) 1997-2013 The PHP Group                                |
    +----------------------------------------------------------------------+
    | This source file is subject to version 3.01 of the PHP license,      |
    | that is bundled with this package in the file LICENSE, and is        |
@@ -13,11 +13,11 @@
    | license@php.net so we can mail you a copy immediately.               |
    +----------------------------------------------------------------------+
    | Authors: Rasmus Lerdorf <rasmus@php.net>                             |
-   |          Jani Taskinen <sniper@php.net>                              |
+   |          Jani Taskinen <jani@php.net>                                |
    +----------------------------------------------------------------------+
  */
 
-/* $Id: rfc1867.c,v 1.1.1.1 2007-11-28 01:15:35 sesser Exp $ */
+/* $Id$ */
 
 /*
  *  This product includes software developed by the Apache Group
@@ -35,10 +35,11 @@
 #include "suhosin_rfc1867.h"
 #include "php_ini.h"
 #include "ext/standard/php_string.h"
+#include "main/php_version.h"
 
 #define DEBUG_FILE_UPLOAD ZEND_DEBUG
 
-#if HAVE_MBSTRING && !defined(COMPILE_DL_MBSTRING)
+#if HAVE_MBSTRING && !defined(COMPILE_DL_MBSTRING) && (PHP_VERSION_ID < 50400)
 #include "ext/mbstring/mbstring.h"
 
 static void safe_php_register_variable(char *var, char *strval, zval *track_vars_array, zend_bool override_protection TSRMLS_DC);
@@ -91,8 +92,7 @@
 	int *len_list=*plen_list;
 
 	if (*num_vars>=*num_vars_max){	
-		php_mb_gpc_realloc_buffer(pval_list, plen_list, num_vars_max, 
-								  16 TSRMLS_CC);
+		php_mb_gpc_realloc_buffer(pval_list, plen_list, num_vars_max, 16 TSRMLS_CC);
 		/* in case realloc relocated the buffer */
 		val_list = *pval_list;
 		len_list = *plen_list;
@@ -206,10 +206,9 @@
 			index = NULL;
 		}	
 	}
-	*s++='\0';
+	*s = '\0';
 }
 
-
 static void add_protected_variable(char *varname TSRMLS_DC)
 {
 	int dummy=1;
@@ -244,21 +243,29 @@
 
 static void register_http_post_files_variable(char *strvar, char *val, zval *http_post_files, zend_bool override_protection TSRMLS_DC)
 {
+#if PHP_VERSION_ID < 50400
 	int register_globals = PG(register_globals);
 
 	PG(register_globals) = 0;
+#endif
 	safe_php_register_variable(strvar, val, http_post_files, override_protection TSRMLS_CC);
+#if PHP_VERSION_ID < 50400
 	PG(register_globals) = register_globals;
+#endif
 }
 
 
 static void register_http_post_files_variable_ex(char *var, zval *val, zval *http_post_files, zend_bool override_protection TSRMLS_DC)
 {
+#if PHP_VERSION_ID < 50400
 	int register_globals = PG(register_globals);
 
 	PG(register_globals) = 0;
+#endif
 	safe_php_register_variable_ex(var, val, http_post_files, override_protection TSRMLS_CC);
+#if PHP_VERSION_ID < 50400
 	PG(register_globals) = register_globals;
+#endif
 }
 
 /*
@@ -289,10 +296,9 @@
 	char *value;
 } mime_header_entry;
 
-
 /*
-  fill up the buffer with client data.
-  returns number of bytes added to buffer.
+ * Fill up the buffer with client data.
+ * Returns number of bytes added to buffer.
 */
 static int fill_buffer(multipart_buffer *self TSRMLS_DC)
 {
@@ -365,17 +371,16 @@
 	return self;
 }
 
-
 /*
-  gets the next CRLF terminated line from the input buffer.
-  if it doesn't find a CRLF, and the buffer isn't completely full, returns
-  NULL; otherwise, returns the beginning of the null-terminated line,
-  minus the CRLF.
-
-  note that we really just look for LF terminated lines. this works
-  around a bug in internet explorer for the macintosh which sends mime
-  boundaries that are only LF terminated when you use an image submit
-  button in a multipart/form-data form.
+ * Gets the next CRLF terminated line from the input buffer.
+ * If it doesn't find a CRLF, and the buffer isn't completely full, returns
+ * NULL; otherwise, returns the beginning of the null-terminated line,
+ * minus the CRLF.
+ *
+ * Note that we really just look for LF terminated lines. This works
+ * around a bug in internet explorer for the macintosh which sends mime
+ * boundaries that are only LF terminated when you use an image submit
+ * button in a multipart/form-data form.
  */
 static char *next_line(multipart_buffer *self)
 {
@@ -411,8 +416,7 @@
 	return line;
 }
 
-
-/* returns the next CRLF terminated line from the client */
+/* Returns the next CRLF terminated line from the client */
 static char *get_line(multipart_buffer *self TSRMLS_DC)
 {
 	char* ptr = next_line(self);
@@ -471,10 +475,9 @@
 
 	/* get lines of text, or CRLF_CRLF */
 
-	while( (line = get_line(self TSRMLS_CC)) && strlen(line) > 0 )
+	while( (line = get_line(self TSRMLS_CC)) && line[0] != '\0' )
 	{
 		/* add header to table */
-		
 		char *key = line;
 		char *value = NULL;
 		
@@ -541,7 +544,6 @@
 	char *res;
 
 	while (*pos && *pos != stop) {
-		
 		if ((quote = *pos) == '"' || quote == '\'') {
 			++pos;
 			while (*pos && *pos != quote) {
@@ -555,7 +557,6 @@
 				++pos;
 			}
 		} else ++pos;
-		
 	}
 	if (*pos == '\0') {
 		res = estrdup(*line);
@@ -584,7 +585,7 @@
 		if (start[i] == '\\' && (start[i + 1] == '\\' || (quote && start[i + 1] == quote))) {
 			*resp++ = start[++i];
 		} else {
-#if HAVE_MBSTRING && !defined(COMPILE_DL_MBSTRING)
+#if HAVE_MBSTRING && !defined(COMPILE_DL_MBSTRING) && (PHP_VERSION_ID < 50400)
 			if (php_mb_encoding_translation(TSRMLS_C)) {
 				size_t j = php_mb_gpc_mbchar_bytes(start+i TSRMLS_CC);
 				while (j-- > 0 && i < len) {
@@ -600,7 +601,7 @@
 		}
 	}
 
-	*resp++ = '\0';
+	*resp = '\0';
 	return result;
 }
 
@@ -609,7 +610,7 @@
 {
 	char *str = *line, *strend, *res, quote;
 
-#if HAVE_MBSTRING && !defined(COMPILE_DL_MBSTRING)
+#if HAVE_MBSTRING && !defined(COMPILE_DL_MBSTRING) && (PHP_VERSION_ID < 50400)
 	if (php_mb_encoding_translation(TSRMLS_C)) {
 		int len=strlen(str);
 		php_mb_gpc_encoding_detector(&str, &len, 1, NULL TSRMLS_CC);
@@ -666,11 +667,10 @@
 	return res;
 }
 
-
 /*
-  search for a string in a fixed-length byte string.
-  if partial is true, partial matches are allowed at the end of the buffer.
-  returns NULL if not found, or a pointer to the start of the first match.
+ * Search for a string in a fixed-length byte string.
+ * If partial is true, partial matches are allowed at the end of the buffer.
+ * Returns NULL if not found, or a pointer to the start of the first match.
 */
 static void *php_ap_memstr(char *haystack, int haystacklen, char *needle, int needlen, int partial)
 {
@@ -755,7 +755,9 @@
 		total_bytes += read_bytes;
 	}
 
-	if (out) out[total_bytes] = '\0';
+	if (out) {
+		out[total_bytes] = '\0';
+	}
 	*len = total_bytes;
 
 	return out;
@@ -773,8 +775,9 @@
 	char *temp_filename=NULL, *lbuf=NULL, *abuf=NULL;
 	int boundary_len=0, total_bytes=0, cancel_upload=0, is_arr_upload=0, array_len=0;
 	int max_file_size=0, skip_upload=0, anonindex=0, is_anonymous;
-	zval *http_post_files=NULL; HashTable *uploaded_files=NULL;
-#if HAVE_MBSTRING && !defined(COMPILE_DL_MBSTRING)
+	zval *http_post_files = NULL;
+	HashTable *uploaded_files = NULL;
+#if HAVE_MBSTRING && !defined(COMPILE_DL_MBSTRING) && (PHP_VERSION_ID < 50400)
 	int str_len = 0, num_vars = 0, num_vars_max = 2*10, *len_list = NULL;
 	char **val_list = NULL;
 #endif
@@ -783,13 +786,17 @@
 	int fd=-1;
 	zend_llist header;
 	void *event_extra_data = NULL;
+	int llen = 0;
 #if PHP_VERSION_ID >= 50302 || (PHP_VERSION_ID >= 50212 && PHP_VERSION_ID < 50300)
 	int upload_cnt = INI_INT("max_file_uploads");
 #endif
+#if PHP_VERSION_ID >= 50311
+	long count = 0;
+#endif
 	
 	SDEBUG("suhosin_rfc1867_handler");
 
-	if (SG(request_info).content_length > SG(post_max_size)) {
+	if (SG(post_max_size) > 0 && SG(request_info).content_length > SG(post_max_size)) {
 		sapi_module.sapi_error(E_WARNING, "POST Content-Length of %ld bytes exceeds the limit of %ld bytes", SG(request_info).content_length, SG(post_max_size));
 		return;
 	}
@@ -825,7 +832,7 @@
 		}
 	} else {
 		/* search for the end of the boundary */
-		boundary_end = strchr(boundary, ',');
+		boundary_end = strpbrk(boundary, ",;");
 	}
 	if (boundary_end) {
 		boundary_end[0] = '\0';
@@ -850,7 +857,7 @@
 	INIT_PZVAL(http_post_files);
 	PG(http_globals)[TRACK_VARS_FILES] = http_post_files;
 
-#if HAVE_MBSTRING && !defined(COMPILE_DL_MBSTRING)
+#if HAVE_MBSTRING && !defined(COMPILE_DL_MBSTRING) && (PHP_VERSION_ID < 50400)
 	if (php_mb_encoding_translation(TSRMLS_C)) {
 		val_list = (char **)ecalloc(num_vars_max+2, sizeof(char *));
 		len_list = (int *)ecalloc(num_vars_max+2, sizeof(int));
@@ -936,11 +943,15 @@
 				}
 
 #ifdef ZEND_ENGINE_2
-				if (sapi_module.input_filter(PARSE_POST, param, &value, new_val_len, &new_val_len TSRMLS_CC)) {
+#if PHP_VERSION_ID >= 50311
+				if (++count <= PG(max_input_vars) && sapi_module.input_filter(PARSE_POST, param, &value, value_len, &new_val_len TSRMLS_CC)) {
+#else
+				if (sapi_module.input_filter(PARSE_POST, param, &value, value_len, &new_val_len TSRMLS_CC)) {
+#endif
 #endif				
 					{
 						multipart_event_formdata event_formdata;
-						size_t newlength = 0;
+						size_t newlength = new_val_len;
 
 						event_formdata.post_bytes_processed = SG(read_post_bytes);
 						event_formdata.name = param;
@@ -955,10 +966,9 @@
 						new_val_len = newlength;
 					}
 					
-#if HAVE_MBSTRING && !defined(COMPILE_DL_MBSTRING)
+#if HAVE_MBSTRING && !defined(COMPILE_DL_MBSTRING) && (PHP_VERSION_ID < 50400)
 					if (php_mb_encoding_translation(TSRMLS_C)) {
-						php_mb_gpc_stack_variable(param, value, &val_list, &len_list, 
-												  &num_vars, &num_vars_max TSRMLS_CC);
+						php_mb_gpc_stack_variable(param, value, &val_list, &len_list, &num_vars, &num_vars_max TSRMLS_CC);
 					} else {
 						safe_php_register_variable(param, value, array_ptr, 0 TSRMLS_CC);
 					}
@@ -967,6 +977,12 @@
 #endif
 #ifdef ZEND_ENGINE_2
 				} else {
+#if PHP_VERSION_ID >= 50311
+					if (count == PG(max_input_vars) + 1) {
+						php_error_docref(NULL TSRMLS_CC, E_WARNING, "Input variables exceeded %ld. To increase the limit change max_input_vars in php.ini.", PG(max_input_vars));
+					}
+#endif
+					{
 					multipart_event_formdata event_formdata;
 
 					event_formdata.post_bytes_processed = SG(read_post_bytes);
@@ -976,6 +992,7 @@
 					event_formdata.newlength = NULL;
                     suhosin_rfc1867_filter(MULTIPART_EVENT_FORMDATA, &event_formdata, &event_extra_data TSRMLS_CC);			    
                 }
+				}
 #endif				
 				if (!strcasecmp(param, "MAX_FILE_SIZE")) {
 					max_file_size = atol(value);
@@ -1013,8 +1030,8 @@
 			
 			/* New Rule: never repair potential malicious user input */
 			if (!skip_upload) {
-				char *tmp = param;
 				long c = 0;
+				tmp = param;
 				
 				while (*tmp) {
 					if (*tmp == '[') {
@@ -1032,49 +1049,37 @@
 					}
 					tmp++;				
 				}
+				/* Brackets should always be closed */
+				if(c != 0) {
+					skip_upload = 1;
+				}
 			}
 
 			total_bytes = cancel_upload = 0;
+			temp_filename = NULL;
+			fd = -1;
 
 			if (!skip_upload) {
 				multipart_event_file_start event_file_start;
 				
-				/* Handle file */
-				fd = php_open_temporary_fd(PG(upload_tmp_dir), "php", &temp_filename TSRMLS_CC);
-#if PHP_VERSION_ID >= 50302 || (PHP_VERSION_ID >= 50212 && PHP_VERSION_ID < 50300)
-                                upload_cnt--;
-#endif
-				if (fd==-1) {
-					sapi_module.sapi_error(E_WARNING, "File upload error - unable to create a temporary file");
-					cancel_upload = UPLOAD_ERROR_E;
-				}
-
 				event_file_start.post_bytes_processed = SG(read_post_bytes);
 				event_file_start.name = param;
 				event_file_start.filename = &filename;
 				if (suhosin_rfc1867_filter(MULTIPART_EVENT_FILE_START, &event_file_start, &event_extra_data TSRMLS_CC) == FAILURE) {
-					if (temp_filename) {
-						if (cancel_upload != UPLOAD_ERROR_E) { /* file creation failed */
-							close(fd);
-							unlink(temp_filename);
-						}
-						efree(temp_filename);
-					}
-					temp_filename = NULL;
+					temp_filename = "";
 					efree(param);
 					efree(filename);
 					continue;
 				}
 			}
 
-			
 			if (skip_upload) {
 				efree(param);
 				efree(filename);
 				continue;
 			}
 
-			if(strlen(filename) == 0) {
+			if (filename[0] == '\0') {
 #if DEBUG_FILE_UPLOAD
 				sapi_module.sapi_error(E_NOTICE, "No file uploaded");
 #endif
@@ -1083,7 +1088,28 @@
 
 			offset = 0;
 			end = 0;
-			while (!cancel_upload && (blen = multipart_buffer_read(mbuff, buff, sizeof(buff), &end TSRMLS_CC)))
+
+			if (!cancel_upload) {
+				/* only bother to open temp file if we have data */
+				blen = multipart_buffer_read(mbuff, buff, sizeof(buff), &end TSRMLS_CC);
+#if DEBUG_FILE_UPLOAD
+				if (blen > 0) {
+#else
+				/* in non-debug mode we have no problem with 0-length files */
+				{
+#endif
+					fd = php_open_temporary_fd_ex(PG(upload_tmp_dir), "php", &temp_filename, 1 TSRMLS_CC);
+#if PHP_VERSION_ID >= 50302 || (PHP_VERSION_ID >= 50212 && PHP_VERSION_ID < 50300)
+					upload_cnt--;
+#endif
+					if (fd == -1) {
+						sapi_module.sapi_error(E_WARNING, "File upload error - unable to create a temporary file");
+						cancel_upload = UPLOAD_ERROR_E;
+					}
+				}
+			}
+
+			while (!cancel_upload && (blen > 0))
 			{
 				{
 					multipart_event_file_data event_file_data;
@@ -1099,22 +1125,26 @@
 					}
 				}
 				
-			
-				if (PG(upload_max_filesize) > 0 && total_bytes+blen > PG(upload_max_filesize)) {
+				if (PG(upload_max_filesize) > 0 && (total_bytes+blen) > PG(upload_max_filesize)) {
 #if DEBUG_FILE_UPLOAD
 					sapi_module.sapi_error(E_NOTICE, "upload_max_filesize of %ld bytes exceeded - file [%s=%s] not saved", PG(upload_max_filesize), param, filename);
 #endif
 					cancel_upload = UPLOAD_ERROR_A;
-				} else if (max_file_size && (total_bytes+blen > max_file_size)) {
+				} else if (max_file_size && ((total_bytes+blen) > max_file_size)) {
 #if DEBUG_FILE_UPLOAD
 					sapi_module.sapi_error(E_NOTICE, "MAX_FILE_SIZE of %ld bytes exceeded - file [%s=%s] not saved", max_file_size, param, filename);
 #endif
 					cancel_upload = UPLOAD_ERROR_B;
 				} else if (blen > 0) {
-				
 					wlen = write(fd, buff, blen);
 			
-					if (wlen < blen) {
+					if (wlen == -1) {
+						/* write failed */
+#if DEBUG_FILE_UPLOAD
+						sapi_module.sapi_error(E_NOTICE, "write() failed - %s", strerror(errno));
+#endif
+						cancel_upload = UPLOAD_ERROR_F;
+					} else if (wlen < blen) {
 #if DEBUG_FILE_UPLOAD
 						sapi_module.sapi_error(E_NOTICE, "Only %d bytes were written, expected to write %d", wlen, blen);
 #endif
@@ -1122,21 +1152,24 @@
 					} else {
 						total_bytes += wlen;
 					}
-					
 					offset += wlen;
 				} 
+
+				/* read data for next iteration */
+				blen = multipart_buffer_read(mbuff, buff, sizeof(buff), &end TSRMLS_CC);
 			}
+
 			if (fd!=-1) { /* may not be initialized if file could not be created */
 				close(fd);
 			}
 			if (!cancel_upload && !end) {
 #if DEBUG_FILE_UPLOAD
-				sapi_module.sapi_error(E_NOTICE, "Missing mime boundary at the end of the data for file %s", strlen(filename) > 0 ? filename : "");
+				sapi_module.sapi_error(E_NOTICE, "Missing mime boundary at the end of the data for file %s", filename[0] != '\0' ? filename : "");
 #endif
 				cancel_upload = UPLOAD_ERROR_C;
 			}
 #if DEBUG_FILE_UPLOAD
-			if(strlen(filename) > 0 && total_bytes == 0 && !cancel_upload) {
+			if(filename[0] != '\0' && total_bytes == 0 && !cancel_upload) {
 				sapi_module.sapi_error(E_WARNING, "Uploaded file size 0 - file [%s=%s] not saved", param, filename);
 				cancel_upload = 5;
 			}
@@ -1167,8 +1200,7 @@
 
 			/* is_arr_upload is true when name of file upload field
 			 * ends in [.*]
-			 * start_arr is set to point to 1st [
-			 */
+			 * start_arr is set to point to 1st [ */
 			is_arr_upload =	(start_arr = strchr(param,'[')) && (param[strlen(param)-1] == ']');
 
 			if (is_arr_upload) {
@@ -1180,24 +1212,24 @@
 			}
 			
 			/* Add $foo_name */
-			if (lbuf) {
-				efree(lbuf);
+			if (llen < strlen(param) + MAX_SIZE_OF_INDEX + 1) {
+				llen = strlen(param);
+				lbuf = (char *) safe_erealloc(lbuf, llen, 1, MAX_SIZE_OF_INDEX + 1);
+				llen += MAX_SIZE_OF_INDEX + 1;
 			}
-			lbuf = (char *) emalloc(strlen(param) + MAX_SIZE_OF_INDEX + 1);
 			
 			if (is_arr_upload) {
 				if (abuf) efree(abuf);
 				abuf = estrndup(param, strlen(param)-array_len);
-				sprintf(lbuf, "%s_name[%s]", abuf, array_index);
+				snprintf(lbuf, llen, "%s_name[%s]", abuf, array_index);
 			} else {
-				sprintf(lbuf, "%s_name", param);
+				snprintf(lbuf, llen, "%s_name", param);
 			}
 
-#if HAVE_MBSTRING && !defined(COMPILE_DL_MBSTRING)
+#if HAVE_MBSTRING && !defined(COMPILE_DL_MBSTRING) && (PHP_VERSION_ID < 50400)
 			if (php_mb_encoding_translation(TSRMLS_C)) {
 				if (num_vars>=num_vars_max){	
-					php_mb_gpc_realloc_buffer(&val_list, &len_list, &num_vars_max, 
-											  1 TSRMLS_CC);
+					php_mb_gpc_realloc_buffer(&val_list, &len_list, &num_vars_max, 1 TSRMLS_CC);
 				}
 				val_list[num_vars] = filename;
 				len_list[num_vars] = strlen(filename);
@@ -1218,28 +1250,28 @@
 			 * it is a valid path separator. However, IE in all it's wisdom always sends
 			 * the full path of the file on the user's filesystem, which means that unless
 			 * the user does basename() they get a bogus file name. Until IE's user base drops 
-			 * to nill or problem is fixed this code must remain enabled for all systems.
-			 */
+			 * to nill or problem is fixed this code must remain enabled for all systems. */
 			s = strrchr(filename, '\\');
 			if ((tmp = strrchr(filename, '/')) > s) {
 				s = tmp;
 			}
-#ifdef PHP_WIN32
+#if defined(PHP_WIN32) && (PHP_VERSION_ID < 50400)
 			if (PG(magic_quotes_gpc)) {
-				s = s ? s : filename;
-				tmp = strrchr(s, '\'');
-				s = tmp > s ? tmp : s;
-				tmp = strrchr(s, '"');
-				s = tmp > s ? tmp : s;
+				if ((tmp = strrchr(s ? s : filename, '\'')) > s) {
+					s = tmp;
+				}
+				if ((tmp = strrchr(s ? s : filename, '"')) > s) {
+					s = tmp;
+				}
 			}
 #endif
 
-#if HAVE_MBSTRING && !defined(COMPILE_DL_MBSTRING)
+#if HAVE_MBSTRING && !defined(COMPILE_DL_MBSTRING) && (PHP_VERSION_ID < 50400)
 filedone:			
 #endif
 			
 			if (!is_anonymous) {
-				if (s && s > filename) {
+				if (s && s >= filename) {
 					safe_php_register_variable(lbuf, s+1, NULL, 0 TSRMLS_CC);
 				} else {
 					safe_php_register_variable(lbuf, filename, NULL, 0 TSRMLS_CC);
@@ -1248,11 +1280,11 @@
 
 			/* Add $foo[name] */
 			if (is_arr_upload) {
-				sprintf(lbuf, "%s[name][%s]", abuf, array_index);
+				snprintf(lbuf, llen, "%s[name][%s]", abuf, array_index);
 			} else {
-				sprintf(lbuf, "%s[name]", param);
+				snprintf(lbuf, llen, "%s[name]", param);
 			}
-			if (s && s > filename) {
+			if (s && s >= filename) {
 				register_http_post_files_variable(lbuf, s+1, http_post_files, 0 TSRMLS_CC);
 			} else {
 				register_http_post_files_variable(lbuf, filename, http_post_files, 0 TSRMLS_CC);
@@ -1273,9 +1305,9 @@
 
 			/* Add $foo_type */
 			if (is_arr_upload) {
-				sprintf(lbuf, "%s_type[%s]", abuf, array_index);
+				snprintf(lbuf, llen, "%s_type[%s]", abuf, array_index);
 			} else {
-				sprintf(lbuf, "%s_type", param);
+				snprintf(lbuf, llen, "%s_type", param);
 			}
 			if (!is_anonymous) {
 				safe_php_register_variable(lbuf, cd, NULL, 0 TSRMLS_CC);
@@ -1283,9 +1315,9 @@
 
 			/* Add $foo[type] */
 			if (is_arr_upload) {
-				sprintf(lbuf, "%s[type][%s]", abuf, array_index);
+				snprintf(lbuf, llen, "%s[type][%s]", abuf, array_index);
 			} else {
-				sprintf(lbuf, "%s[type]", param);
+				snprintf(lbuf, llen, "%s[type]", param);
 			}
 			register_http_post_files_variable(lbuf, cd, http_post_files, 0 TSRMLS_CC);
 
@@ -1311,9 +1343,9 @@
 
 				/* Add $foo[tmp_name] */
 				if (is_arr_upload) {
-					sprintf(lbuf, "%s[tmp_name][%s]", abuf, array_index);
+					snprintf(lbuf, llen, "%s[tmp_name][%s]", abuf, array_index);
 				} else {
-					sprintf(lbuf, "%s[tmp_name]", param);
+					snprintf(lbuf, llen, "%s[tmp_name]", param);
 				}
 				add_protected_variable(lbuf TSRMLS_CC);
 				ZVAL_STRING(&zfilename, temp_filename, 1);
@@ -1336,17 +1368,17 @@
 				}	
 	
 				if (is_arr_upload) {
-					sprintf(lbuf, "%s[error][%s]", abuf, array_index);
+					snprintf(lbuf, llen, "%s[error][%s]", abuf, array_index);
 				} else {
-					sprintf(lbuf, "%s[error]", param);
+					snprintf(lbuf, llen, "%s[error]", param);
 				}
 				register_http_post_files_variable_ex(lbuf, &error_type, http_post_files, 0 TSRMLS_CC);
 
 				/* Add $foo_size */
 				if (is_arr_upload) {
-					sprintf(lbuf, "%s_size[%s]", abuf, array_index);
+					snprintf(lbuf, llen, "%s_size[%s]", abuf, array_index);
 				} else {
-					sprintf(lbuf, "%s_size", param);
+					snprintf(lbuf, llen, "%s_size", param);
 				}
 				if (!is_anonymous) {
 					safe_php_register_variable_ex(lbuf, &file_size, NULL, 0 TSRMLS_CC);
@@ -1354,9 +1386,9 @@
 
 				/* Add $foo[size] */
 				if (is_arr_upload) {
-					sprintf(lbuf, "%s[size][%s]", abuf, array_index);
+					snprintf(lbuf, llen, "%s[size][%s]", abuf, array_index);
 				} else {
-					sprintf(lbuf, "%s[size]", param);
+					snprintf(lbuf, llen, "%s[size]", param);
 				}
 				register_http_post_files_variable_ex(lbuf, &file_size, http_post_files, 0 TSRMLS_CC);
 			}
diff -uNr suhosin-0.9.33/session.c suhosin-0.9.33.php55/session.c
--- suhosin-0.9.33/session.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php55/session.c	Fri Feb 14 18:17:07 2014
@@ -3,7 +3,7 @@
   | Suhosin Version 1                            |
   +----------------------------------------------------------------------+
   | Copyright (c) 2006-2007 The Hardened-PHP Project             |
-  | Copyright (c) 2007-2012 SektionEins GmbH                 |
+  | Copyright (c) 2007-2014 SektionEins GmbH                 |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,  |
   | that is bundled with this package in the file LICENSE, and is    |
@@ -233,9 +233,160 @@
     zend_bool invalid_session_id;   /* allows the driver to report about an invalid session id and request id regeneration */
 } php_ps_globals_53;
 
+#if PHP_VERSION_ID >= 50400
+typedef struct _php_session_rfc1867_progress_54_55 {
+
+	size_t    sname_len;
+	zval      sid;
+	smart_str key;
+
+	long      update_step;
+	long      next_update;
+	double    next_update_time;
+	zend_bool cancel_upload;
+	zend_bool apply_trans_sid;
+	size_t    content_length;
+
+	zval      *data;                 /* the array exported to session data */
+	zval      *post_bytes_processed; /* data["bytes_processed"] */
+	zval      *files;                /* data["files"] array */
+	zval      *current_file;         /* array of currently uploading file */
+	zval      *current_file_bytes_processed;
+} php_session_rfc1867_progress_54_55;
+
+typedef struct _php_ps_globals_54 {
+    char *save_path;
+    char *session_name;
+    char *id;
+    char *extern_referer_chk;
+    char *entropy_file;
+    char *cache_limiter;
+    long entropy_length;
+    long cookie_lifetime;
+    char *cookie_path;
+    char *cookie_domain;
+    zend_bool  cookie_secure;
+    zend_bool  cookie_httponly;
+    ps_module *mod;
+    ps_module *default_mod;
+    void *mod_data;
+    php_session_status session_status;
+    long gc_probability;
+    long gc_divisor;
+    long gc_maxlifetime;
+    int module_number;
+    long cache_expire;
+    union {
+        zval *names[6];
+        struct {
+            zval *ps_open;
+            zval *ps_close;
+            zval *ps_read;
+            zval *ps_write;
+            zval *ps_destroy;
+            zval *ps_gc;
+        } name;
+    } mod_user_names;
+    int mod_user_implemented;
+    int mod_user_is_open;
+    const struct ps_serializer_struct *serializer;
+    zval *http_session_vars;
+    zend_bool auto_start;
+    zend_bool use_cookies;
+    zend_bool use_only_cookies;
+    zend_bool use_trans_sid;    /* contains the INI value of whether to use trans-sid */
+    zend_bool apply_trans_sid;  /* whether or not to enable trans-sid for the current request */
+
+    long hash_func;
+#if defined(HAVE_HASH_EXT) && !defined(COMPILE_DL_HASH)
+    php_hash_ops *hash_ops;
+#endif
+    long hash_bits_per_character;
+    int send_cookie;
+    int define_sid;
+    zend_bool invalid_session_id;   /* allows the driver to report about an invalid session id and request id regeneration */
+
+    php_session_rfc1867_progress_54_55 *rfc1867_progress;
+    zend_bool rfc1867_enabled; /* session.upload_progress.enabled */
+    zend_bool rfc1867_cleanup; /* session.upload_progress.cleanup */
+    smart_str rfc1867_prefix;  /* session.upload_progress.prefix */
+    smart_str rfc1867_name;    /* session.upload_progress.name */
+    long rfc1867_freq;         /* session.upload_progress.freq */
+    double rfc1867_min_freq;   /* session.upload_progress.min_freq */
+} php_ps_globals_54;
+
+typedef struct _php_ps_globals_55 {
+	char *save_path;
+	char *session_name;
+	char *id;
+	char *extern_referer_chk;
+	char *entropy_file;
+	char *cache_limiter;
+	long entropy_length;
+	long cookie_lifetime;
+	char *cookie_path;
+	char *cookie_domain;
+	zend_bool  cookie_secure;
+	zend_bool  cookie_httponly;
+	ps_module *mod;
+	ps_module *default_mod;
+	void *mod_data;
+	php_session_status session_status;
+	long gc_probability;
+	long gc_divisor;
+	long gc_maxlifetime;
+	int module_number;
+	long cache_expire;
+	union {
+		zval *names[7];
+		struct {
+			zval *ps_open;
+			zval *ps_close;
+			zval *ps_read;
+			zval *ps_write;
+			zval *ps_destroy;
+			zval *ps_gc;
+			zval *ps_create_sid;
+		} name;
+	} mod_user_names;
+	int mod_user_implemented;
+	int mod_user_is_open;
+	const struct ps_serializer_struct *serializer;
+	zval *http_session_vars;
+	zend_bool auto_start;
+	zend_bool use_cookies;
+	zend_bool use_only_cookies;
+	zend_bool use_trans_sid;	/* contains the INI value of whether to use trans-sid */
+	zend_bool apply_trans_sid;	/* whether or not to enable trans-sid for the current request */
+
+	long hash_func;
+#if defined(HAVE_HASH_EXT) && !defined(COMPILE_DL_HASH)
+	php_hash_ops *hash_ops;
+#endif
+	long hash_bits_per_character;
+	int send_cookie;
+	int define_sid;
+	zend_bool invalid_session_id;	/* allows the driver to report about an invalid session id and request id regeneration */
+
+	php_session_rfc1867_progress_54_55 *rfc1867_progress;
+	zend_bool rfc1867_enabled; /* session.upload_progress.enabled */
+	zend_bool rfc1867_cleanup; /* session.upload_progress.cleanup */
+	smart_str rfc1867_prefix;  /* session.upload_progress.prefix */
+	smart_str rfc1867_name;    /* session.upload_progress.name */
+	long rfc1867_freq;         /* session.upload_progress.freq */
+	double rfc1867_min_freq;   /* session.upload_progress.min_freq */
+
+	zend_bool use_strict_mode; /* whether or not PHP accepts unknown session ids */
+} php_ps_globals_55;
+#endif
+
 #ifdef ZTS
 static ts_rsrc_id session_globals_id = 0;
-# if (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 3)
+# if (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 5)
+#  define SESSION_G(v) TSRMG(session_globals_id, php_ps_globals_55 *, v)
+# elif (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 4)
+#  define SESSION_G(v) TSRMG(session_globals_id, php_ps_globals_54 *, v)
+# elif (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 3)
 #  define SESSION_G(v) TSRMG(session_globals_id, php_ps_globals_53 *, v)
 # elif (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 2)
 #  define SESSION_G(v) TSRMG(session_globals_id, php_ps_globals_52 *, v)
@@ -247,7 +398,11 @@
     UNSUPPORTED PHP VERSION
 # endif
 #else
-# if (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 3)
+# if (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 5)
+static php_ps_globals_55 *session_globals = NULL;
+# elif (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 4)
+static php_ps_globals_54 *session_globals = NULL;
+# elif (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 3)
 static php_ps_globals_53 *session_globals = NULL;
 # elif (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 2)
 static php_ps_globals_52 *session_globals = NULL;
@@ -269,6 +424,25 @@
     ulong num_key;                                              \
     zval **struc;
 
+#if (PHP_MAJOR_VERSION > 5) || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 5)
+#define PS_ENCODE_LOOP(code) do {									\
+		HashTable *_ht = Z_ARRVAL_P(SESSION_G(http_session_vars));			\
+		int key_type;												\
+																	\
+		for (zend_hash_internal_pointer_reset(_ht);					\
+				(key_type = zend_hash_get_current_key_ex(_ht, &key, &key_length, &num_key, 0, NULL)) != HASH_KEY_NON_EXISTENT; \
+					zend_hash_move_forward(_ht)) {					\
+			if (key_type == HASH_KEY_IS_LONG) {						\
+				php_error_docref(NULL TSRMLS_CC, E_NOTICE, "Skipping numeric key %ld", num_key);	\
+				continue;											\
+			}														\
+			key_length--;											\
+			if (suhosin_get_session_var(key, key_length, &struc TSRMLS_CC) == SUCCESS) {	\
+				code;		 										\
+			} 														\
+		}															\
+	} while(0)
+#else
 #define PS_ENCODE_LOOP(code) do {                                   \
         HashTable *_ht = Z_ARRVAL_P(SESSION_G(http_session_vars));          \
         int key_type;                                               \
@@ -286,6 +460,7 @@
             }                                                       \
         }                                                           \
     } while(0)
+#endif
 
 static int suhosin_get_session_var(char *name, size_t namelen, zval ***state_var TSRMLS_DC) /* {{{ */
 {
@@ -294,6 +469,7 @@
     if (SESSION_G(http_session_vars) && SESSION_G(http_session_vars)->type == IS_ARRAY) {
         ret = zend_hash_find(Z_ARRVAL_P(SESSION_G(http_session_vars)), name, namelen + 1, (void **) state_var);
 
+#if PHP_VERSION_ID < 50400
         /* If register_globals is enabled, and
          * if there is an entry for the slot in $_SESSION, and
          * if that entry is still set to NULL, and
@@ -307,6 +483,7 @@
                 *state_var = tmp;
             }
         }
+#endif
     }
     return ret;
 }
@@ -426,7 +603,7 @@
     }
     
     /* store ip value */
-    suhosin_get_ipv4(crypted+4 TSRMLS_CC);
+    suhosin_get_ipv4((char *)crypted+4 TSRMLS_CC);
     
     /* store check value */
     crypted[8] = check & 0xff;
@@ -544,7 +721,7 @@
         if (check_ra > 4) {
             check_ra = 4;
         }
-        suhosin_get_ipv4(&buf TSRMLS_CC);
+        suhosin_get_ipv4(&buf[0] TSRMLS_CC);
         if (memcmp(buf, decrypted+4, check_ra) != 0) {
             goto error_out;
         }
@@ -639,7 +816,12 @@
     }*/
     
     /* protect dumb session handlers */
-    if (key == NULL || !key[0] || *mod_data == NULL) {
+    if (key == NULL || !key[0] ||
+		(*mod_data == NULL
+#if PHP_VERSION_ID >= 50400
+		 && !SESSION_G(mod_user_implemented)
+#endif
+		)) {
 regenerate:
         SDEBUG("regenerating key is %s", key);
         KEY = SESSION_G(id) = SESSION_G(mod)->s_create_sid(&SESSION_G(mod_data), NULL TSRMLS_CC);
@@ -688,7 +870,12 @@
     char *v = (char *)val;
 
     /* protect dumb session handlers */
-    if (key == NULL || !key[0] || val == NULL || strlen(key) > SUHOSIN_G(session_max_id_length) || *mod_data == NULL) {
+    if (key == NULL || !key[0] || val == NULL || strlen(key) > SUHOSIN_G(session_max_id_length) ||
+		(*mod_data == NULL
+#if PHP_VERSION_ID >= 50400
+		 && !SESSION_G(mod_user_implemented)
+#endif
+		)) {
         r = FAILURE;
         goto return_write;
     }
@@ -731,7 +918,12 @@
     int r;
 
     /* protect dumb session handlers */
-    if (key == NULL || !key[0] || strlen(key) > SUHOSIN_G(session_max_id_length) || *mod_data == NULL) {
+    if (key == NULL || !key[0] || strlen(key) > SUHOSIN_G(session_max_id_length) ||
+		(*mod_data == NULL
+#if PHP_VERSION_ID >= 50400
+		 && !SESSION_G(mod_user_implemented)
+#endif
+		)) {
         return FAILURE;
     }
     
@@ -763,15 +955,25 @@
     SUHOSIN_G(old_s_destroy) = mod->s_destroy;
     mod->s_destroy = suhosin_hook_s_destroy;
     
+    SUHOSIN_G(old_s_module) = old_mod;
     SESSION_G(mod) = mod;
 }
 
+static void suhosin_unhook_session_module(TSRMLS_D)
+{
+    ps_module *old_mod = SUHOSIN_G(old_s_module);
+
+    if (old_mod != NULL) {
+		SESSION_G(mod) = old_mod;
+    }
+}
+
 static PHP_INI_MH(suhosin_OnUpdateSaveHandler)
 {
     int r;
 
+    suhosin_unhook_session_module(TSRMLS_C);
     r = old_OnUpdateSaveHandler(entry, new_value, new_value_length, mh_arg1, mh_arg2, mh_arg3, stage TSRMLS_CC);
-    
     suhosin_hook_session_module(TSRMLS_C);
     
     return r;
@@ -861,7 +1063,7 @@
     
     /* Protect the PHP serializer from ! attacks */
 # if PHP_MAJOR_VERSION > 5 || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 2)
-    serializer = SESSION_G(serializer);
+    serializer = (ps_serializer *) SESSION_G(serializer);
     if (serializer != NULL && strcmp(serializer->name, "php")==0) {
         serializer->encode = suhosin_session_encode;
     }
@@ -869,7 +1071,7 @@
 
     /* increase session identifier entropy */
     if (SESSION_G(entropy_length) == 0 || SESSION_G(entropy_file) == NULL) {
-        
+#ifndef PHP_WIN32
         /* ensure that /dev/urandom exists */
         int fd = VCWD_OPEN("/dev/urandom", O_RDONLY);
         if (fd >= 0) {
@@ -877,6 +1079,7 @@
             SESSION_G(entropy_length) = 16;
             SESSION_G(entropy_file) = pestrdup("/dev/urandom", 1);
         }
+#endif
     }
 }
 
diff -uNr suhosin-0.9.33/sha256.c suhosin-0.9.33.php55/sha256.c
--- suhosin-0.9.33/sha256.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php55/sha256.c	Fri Feb 14 18:17:07 2014
@@ -3,7 +3,7 @@
   | Suhosin Version 1                                                    |
   +----------------------------------------------------------------------+
   | Copyright (c) 2006-2007 The Hardened-PHP Project                     |
-  | Copyright (c) 2007-2012 SektionEins GmbH                             |
+  | Copyright (c) 2007-2014 SektionEins GmbH                             |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
@@ -86,9 +86,11 @@
 		return;
 	}
 
+#if PHP_VERSION_ID < 50400
 	if (PG(safe_mode) && (!php_checkuid(arg, NULL, CHECKUID_CHECK_FILE_AND_DIR))) {
 		RETURN_FALSE;
 	}
+#endif
 
 	if (php_check_open_basedir(arg TSRMLS_CC)) {
 		RETURN_FALSE;
@@ -392,7 +394,7 @@
 
 /* {{{ suhosin_sha256_functions[]
  */
-static function_entry suhosin_sha256_functions[] = {
+static zend_function_entry suhosin_sha256_functions[] = {
 	PHP_NAMED_FE(sha256, PHP_FN(suhosin_sha256), NULL)
 	PHP_NAMED_FE(sha256_file, PHP_FN(suhosin_sha256_file), NULL)
 	{NULL, NULL, NULL}
diff -uNr suhosin-0.9.33/sha256.h suhosin-0.9.33.php55/sha256.h
--- suhosin-0.9.33/sha256.h	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php55/sha256.h	Fri Feb 14 18:17:07 2014
@@ -3,7 +3,7 @@
   | Suhosin Version 1                                                    |
   +----------------------------------------------------------------------+
   | Copyright (c) 2006-2007 The Hardened-PHP Project                     |
-  | Copyright (c) 2007-2012 SektionEins GmbH                             |
+  | Copyright (c) 2007-2014 SektionEins GmbH                             |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
diff -uNr suhosin-0.9.33/suhosin.c suhosin-0.9.33.php55/suhosin.c
--- suhosin-0.9.33/suhosin.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php55/suhosin.c	Fri Feb 14 18:17:07 2014
@@ -3,7 +3,7 @@
   | Suhosin Version 1                                                    |
   +----------------------------------------------------------------------+
   | Copyright (c) 2006-2007 The Hardened-PHP Project                     |
-  | Copyright (c) 2007-2012 SektionEins GmbH                             |
+  | Copyright (c) 2007-2014 SektionEins GmbH                             |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
@@ -32,8 +32,12 @@
 #include "zend_llist.h"
 #include "zend_operators.h"
 #include "SAPI.h"
+
+#if PHP_VERSION_ID < 50500
 #include "php_logos.h"
 #include "suhosin_logo.h"
+#endif
+
 #include "ext/standard/php_string.h"
 #include "ext/standard/url.h"
 #include "ext/standard/base64.h"
@@ -62,7 +66,7 @@
 	SUHOSIN_EXT_VERSION,
 	"SektionEins GmbH",
 	"http://www.suhosin.org",
-	"Copyright (c) 2007-2012",
+	"Copyright (c) 2007-2014",
 	suhosin_module_startup,
 	suhosin_shutdown,
 	NULL,
@@ -189,9 +193,11 @@
 
 static void suhosin_shutdown(zend_extension *extension)
 {
+	TSRMLS_FETCH();
+
 	suhosin_unhook_execute();
 	suhosin_unhook_header_handler();
-	suhosin_unhook_post_handlers();
+	suhosin_unhook_post_handlers(TSRMLS_C);
     
     if (ze != NULL) {
 	    ze->startup = orig_module_startup;
@@ -646,12 +652,16 @@
 				array_init(gpc_element);
 				zend_hash_next_index_insert(symtable1, &gpc_element, sizeof(zval *), (void **) &gpc_element_p);
 			} else {
+#if PHP_VERSION_ID < 50400
 				if (PG(magic_quotes_gpc) && (index != var)) {
 					/* no need to addslashes() the index if it's the main variable name */
 					escaped_index = php_addslashes(index, index_len, &index_len, 0 TSRMLS_CC);
 				} else {
+#endif
 					escaped_index = index;
+#if PHP_VERSION_ID < 50400
 				}
+#endif
 				if (zend_symtable_find(symtable1, escaped_index, index_len + 1, (void **) &gpc_element_p) == FAILURE
 					|| Z_TYPE_PP(gpc_element_p) != IS_ARRAY) {
 					MAKE_STD_ZVAL(gpc_element);
@@ -683,11 +693,15 @@
 		if (!index) {
 			zend_hash_next_index_insert(symtable1, &gpc_element, sizeof(zval *), (void **) &gpc_element_p);
 		} else {
+#if PHP_VERSION_ID < 50400
 			if (PG(magic_quotes_gpc)) { 
 				escaped_index = php_addslashes(index, index_len, &index_len, 0 TSRMLS_CC);
 			} else {
+#endif
 				escaped_index = index;
+#if PHP_VERSION_ID < 50400
 			}
+#endif
 			/* 
 			 * According to rfc2965, more specific paths are listed above the less specific ones.
 			 * If we encounter a duplicate cookie name, we should skip it, since it is not possible
@@ -714,11 +728,15 @@
 	
 	/* Prepare value */
 	Z_STRLEN(new_entry) = str_len;
+#if PHP_VERSION_ID < 50400
 	if (PG(magic_quotes_gpc)) {
 		Z_STRVAL(new_entry) = php_addslashes(strval, Z_STRLEN(new_entry), &Z_STRLEN(new_entry), 0 TSRMLS_CC);
 	} else {
+#endif
 		Z_STRVAL(new_entry) = estrndup(strval, Z_STRLEN(new_entry));
+#if PHP_VERSION_ID < 50400
 	}
+#endif
 	Z_TYPE(new_entry) = IS_STRING;
 
 	suhosin_register_cookie_variable(var, &new_entry, track_vars_array TSRMLS_CC);
@@ -1100,8 +1118,10 @@
 	suhosin_hook_sha256();
 	suhosin_hook_ex_imp();
 
+#if PHP_VERSION_ID < 50500
 	/* register the logo for phpinfo */
 	php_register_info_logo(SUHOSIN_LOGO_GUID, "image/jpeg", suhosin_logo, sizeof(suhosin_logo));
+#endif
 
 #if PHP_MAJOR_VERSION < 5
 	php_error_docref(NULL TSRMLS_CC, E_ERROR, "Suhosin Extension is not designed to run with PHP 4 and below. Erroring Out.");
@@ -1191,6 +1211,8 @@
 PHP_MINFO_FUNCTION(suhosin)
 {
 	php_info_print_box_start(0);
+
+#if PHP_VERSION_ID < 50500
 	if (!sapi_module.phpinfo_as_text) {
 		if (PG(expose_php)) {
 			PUTS("<a href=\"http://www.suhosin.org/\"><img border=\"0\" src=\"");
@@ -1227,14 +1249,15 @@
 			PUTS("\" alt=\"Suhosin logo\" /></a>\n");
 		} while(0);
 	}
+#endif
 	PUTS("This server is protected with the Suhosin Extension " SUHOSIN_EXT_VERSION);
 	PUTS(!sapi_module.phpinfo_as_text?"<br /><br />":"\n\n");
 	if (sapi_module.phpinfo_as_text) {
 		PUTS("Copyright (c) 2006-2007 Hardened-PHP Project\n");
-		PUTS("Copyright (c) 2007-2012 SektionEins GmbH\n");
+		PUTS("Copyright (c) 2007-2014 SektionEins GmbH\n");
 	} else {
 		PUTS("Copyright (c) 2006-2007 <a href=\"http://www.hardened-php.net/\">Hardened-PHP Project</a><br />\n");
-		PUTS("Copyright (c) 2007-2012 <a href=\"http://www.sektioneins.de/\">SektionEins GmbH</a>\n");
+		PUTS("Copyright (c) 2007-2014 <a href=\"http://www.sektioneins.de/\">SektionEins GmbH</a>\n");
 	}
 	php_info_print_box_end();
 
diff -uNr suhosin-0.9.33/suhosin_rfc1867.h suhosin-0.9.33.php55/suhosin_rfc1867.h
--- suhosin-0.9.33/suhosin_rfc1867.h	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php55/suhosin_rfc1867.h	Fri Feb 14 18:17:07 2014
@@ -3,7 +3,7 @@
   | Suhosin Version 1                                                    |
   +----------------------------------------------------------------------+
   | Copyright (c) 2006-2007 The Hardened-PHP Project                     |
-  | Copyright (c) 2007-2012 SektionEins GmbH                             |
+  | Copyright (c) 2007-2014 SektionEins GmbH                             |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
@@ -79,6 +79,7 @@
 SAPI_POST_HANDLER_FUNC(suhosin_rfc1867_post_handler);
 
 void destroy_uploaded_files_hash(TSRMLS_D);
+extern PHP_SUHOSIN_API int (*old_rfc1867_callback)(unsigned int event, void *event_data, void **extra TSRMLS_DC);
 #if !HAVE_RFC1867_CALLBACK
 extern PHP_SUHOSIN_API int (*php_rfc1867_callback)(unsigned int event, void *event_data, void **extra TSRMLS_DC);
 #else
diff -uNr suhosin-0.9.33/treat_data.c suhosin-0.9.33.php55/treat_data.c
--- suhosin-0.9.33/treat_data.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php55/treat_data.c	Fri Feb 14 18:17:08 2014
@@ -3,7 +3,7 @@
   | Suhosin Version 1                                                    |
   +----------------------------------------------------------------------+
   | Copyright (c) 2006-2007 The Hardened-PHP Project                     |
-  | Copyright (c) 2007-2012 SektionEins GmbH                             |
+  | Copyright (c) 2007-2014 SektionEins GmbH                             |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
@@ -39,6 +39,10 @@
 	int free_buffer = 0;
 	char *strtok_buf = NULL;
 
+#if PHP_VERSION_ID >= 50311
+	long count = 0;
+#endif
+
 	/* Mark that we were not yet called */
 	SUHOSIN_G(already_scanned) = 0;
 	
@@ -135,10 +139,22 @@
 	var = php_strtok_r(res, separator, &strtok_buf);
 	
 	while (var) {
-		/* Overjump plain whitespace */
-		while (*var && *var == ' ') var++;
 
+		if (arg == PARSE_COOKIE) {
+			/* Remove leading spaces from cookie names, needed for multi-cookie header where ; can be followed by a space */
+			while (isspace(*var)) {
+				var++;
+			}
+		}
 		val = strchr(var, '=');
+
+#if PHP_VERSION_ID >= 50311
+		if (++count > PG(max_input_vars)) {
+			php_error_docref(NULL TSRMLS_CC, E_WARNING, "Input variables exceeded %ld. To increase the limit change max_input_vars in php.ini.", PG(max_input_vars));
+			break;
+		}
+#endif
+
 		if (val) { /* have a value */
 			int val_len;
 			unsigned int new_val_len;
@@ -194,7 +210,13 @@
 
 void suhosin_hook_treat_data()
 {
+#if PHP_VERSION_ID < 50400
 	sapi_register_treat_data(suhosin_treat_data);
+#else
+	TSRMLS_FETCH();
+
+	sapi_register_treat_data(suhosin_treat_data TSRMLS_CC);
+#endif
 #ifdef ZEND_ENGINE_2
 	if (old_input_filter == NULL) {
 		old_input_filter = sapi_module.input_filter;
diff -uNr suhosin-0.9.33/ufilter.c suhosin-0.9.33.php55/ufilter.c
--- suhosin-0.9.33/ufilter.c	Thu Jan 19 15:49:18 2012
+++ suhosin-0.9.33.php55/ufilter.c	Fri Feb 14 18:17:08 2014
@@ -3,7 +3,7 @@
   | Suhosin Version 1                                                    |
   +----------------------------------------------------------------------+
   | Copyright (c) 2006-2007 The Hardened-PHP Project                     |
-  | Copyright (c) 2007-2012 SektionEins GmbH                             |
+  | Copyright (c) 2007-2014 SektionEins GmbH                             |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
@@ -31,6 +31,7 @@
 #include "php_variables.h"
 #include "suhosin_rfc1867.h"
 
+PHP_SUHOSIN_API int (*old_rfc1867_callback)(unsigned int event, void *event_data, void **extra TSRMLS_DC) = NULL;
 #if !HAVE_RFC1867_CALLBACK
 PHP_SUHOSIN_API int (*php_rfc1867_callback)(unsigned int event, void *event_data, void **extra TSRMLS_DC) = NULL;
 #endif
@@ -345,8 +346,8 @@
 	}
 continue_with_next:	
 #if HAVE_RFC1867_CALLBACK
-	if (php_rfc1867_callback != NULL) {
-		return php_rfc1867_callback(event, event_data, extra TSRMLS_CC);
+	if (old_rfc1867_callback != NULL) {
+		return old_rfc1867_callback(event, event_data, extra TSRMLS_CC);
 	}
 #endif
 	return SUCCESS;
